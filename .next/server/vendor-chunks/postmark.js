"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postmark";
exports.ids = ["vendor-chunks/postmark"];
exports.modules = {

/***/ "(rsc)/./node_modules/postmark/dist/client/AccountClient.js":
/*!************************************************************!*\
  !*** ./node_modules/postmark/dist/client/AccountClient.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar BaseClient_1 = __webpack_require__(/*! ./BaseClient */ \"(rsc)/./node_modules/postmark/dist/client/BaseClient.js\");\nvar models_1 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar models_2 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar AccountClient = /** @class */ function(_super) {\n    __extends(AccountClient, _super);\n    /**\n     * Create a new AccountClient\n     * @param accountToken The account token that should be used with requests.\n     * @param configOptions Various options to customize client behavior.\n     */ function AccountClient(accountToken, configOptions) {\n        return _super.call(this, accountToken, models_1.ClientOptions.AuthHeaderNames.ACCOUNT_TOKEN, configOptions) || this;\n    }\n    /**\n     * Retrieve a list of Servers.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getServers = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_2.ServerFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/servers\", filter, callback);\n    };\n    /**\n     * Retrieve a single server by ID.\n     *\n     * @param id - The ID of the Server for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getServer = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/servers/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a new Server.\n     *\n     * @param options - The options to be used to create new Server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createServer = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/servers\", options, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param id - The ID of the Server you wish to update.\n     * @param options - The options to be used to create new Server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editServer = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/servers/\".concat(id), options, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteServer = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/servers/\".concat(id), {}, callback);\n    };\n    /**\n     * Retrieve a batch of Domains.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDomains = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/domains\", filter, callback);\n    };\n    /**\n     * Retrieve a single Domain by ID.\n     *\n     * @param id - The ID of the Domain for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDomain = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/domains/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a new Domain.\n     *\n     * @param options - The options to be used to create new Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createDomain = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\", options, callback);\n    };\n    /**\n     * Update a Domain.\n     *\n     * @param id - The ID of the Domain you wish to update.\n     * @param domain - The values on the Domain you wish to update.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editDomain = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id), options, callback);\n    };\n    /**\n     * Delete a Domain.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param options - The options to be used in create Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteDomain = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/domains/\".concat(id), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainDKIM = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id, \"/verifyDKIM\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainReturnPath = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id, \"/verifyReturnPath\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainSPF = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\".concat(id, \"/verifySPF\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.rotateDomainDKIM = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\".concat(id, \"/rotateDKIM\"), {}, callback);\n    };\n    /**\n     * Retrieve a single Sender Signature by ID.\n     *\n     * @param id - The ID of the Sender Signature for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/senders/\".concat(id), {}, callback);\n    };\n    /**\n     * Retrieve a batch of Sender Signatures.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getSenderSignatures = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/senders\", filter, callback);\n    };\n    /**\n     * Create a new Sender Signature.\n     *\n     * @param options - The options to be used to create new Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createSenderSignature = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\", options, callback);\n    };\n    /**\n     * Update a Sender Signature.\n     *\n     * @param id - The ID of the Sender Signature for which you wish to update.\n     * @param options - The values on the Sender Signature you wish to update.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editSenderSignature = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/senders/\".concat(id), options, callback);\n    };\n    /**\n     * Delete a Domain.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param options - The options to be used in create Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/senders/\".concat(id), {}, callback);\n    };\n    /**\n     * Request a new confirmation email to be sent to the email address associated with a Sender Signature.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.resendSenderSignatureConfirmation = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/resend\"), {}, callback);\n    };\n    /**\n     * Request that the SPF records for Sender Signature be verified.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifySenderSignatureSPF = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/verifySpf\"), {}, callback);\n    };\n    /**\n     * Request that the SPF records for Sender Signature be verified.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.requestNewDKIMForSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/requestNewDkim\"), {}, callback);\n    };\n    /**\n     * Request a push of templates from one server to another.\n     *\n     * @param options - details for pushing templates from one place to another.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.pushTemplates = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/templates/push\", options, callback);\n    };\n    /**\n     * Request a data removal.\n     *\n     * @param options - details for creating data removal request\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.requestDataRemoval = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/data-removals\", options, callback);\n    };\n    /**\n     * Retrieve a single data removal status by ID.\n     *\n     * @param id - The ID of the DataRemoval for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDataRemovalStatus = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/data-removals/\".concat(id), {}, callback);\n    };\n    return AccountClient;\n}(BaseClient_1.default);\nexports[\"default\"] = AccountClient; //# sourceMappingURL=AccountClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/AccountClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/BaseClient.js":
/*!*********************************************************!*\
  !*** ./node_modules/postmark/dist/client/BaseClient.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar ErrorHandler_1 = __webpack_require__(/*! ./errors/ErrorHandler */ \"(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js\");\nvar HttpClient_1 = __webpack_require__(/*! ./HttpClient */ \"(rsc)/./node_modules/postmark/dist/client/HttpClient.js\");\nvar packageJson = __webpack_require__(/*! ../../package.json */ \"(rsc)/./node_modules/postmark/package.json\");\nvar CLIENT_VERSION = packageJson.version;\n/**\n * Base client class from which client classes can be implemented, in our case, AccountClient and ServerClient classes.\n * This class is NOT intended to be instantiated directly.\n */ var BaseClient = /** @class */ function() {\n    function BaseClient(token, authHeader, configOptions) {\n        this.errorHandler = new ErrorHandler_1.ErrorHandler();\n        this.verifyToken(token);\n        this.token = token.trim();\n        this.authHeader = authHeader;\n        this.clientVersion = CLIENT_VERSION;\n        this.httpClient = new HttpClient_1.AxiosHttpClient(configOptions);\n    }\n    BaseClient.prototype.setClientOptions = function(configOptions) {\n        this.httpClient.initHttpClient(configOptions);\n    };\n    BaseClient.prototype.getClientOptions = function() {\n        return this.httpClient.clientOptions;\n    };\n    /**\n     * Process http request with sending body - data.\n     *\n     * @see processRequest for more details.\n     */ BaseClient.prototype.processRequestWithBody = function(method, path, body, callback) {\n        return this.processRequest(method, path, {}, body, callback);\n    };\n    /**\n     * Process http request without sending body - data.\n     *\n     * @see processRequest for more details.\n     */ BaseClient.prototype.processRequestWithoutBody = function(method, path, queryParameters, callback) {\n        if (queryParameters === void 0) {\n            queryParameters = {};\n        }\n        return this.processRequest(method, path, queryParameters, null, callback);\n    };\n    /**\n     * Process request for Postmark ClientOptions.\n     *\n     * @param method - see processHttpRequest for details\n     * @param path - see processHttpRequest for details\n     * @param queryParameters - see processHttpRequest for details\n     * @param body - see processHttpRequest for details\n     * @param callback - callback function to be executed.\n     *\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ BaseClient.prototype.processRequest = function(method, path, queryParameters, body, callback) {\n        var httpRequest = this.processHttpRequest(method, path, queryParameters, body);\n        this.processCallbackRequest(httpRequest, callback);\n        return httpRequest;\n    };\n    /**\n     * Process HTTP request.\n     *\n     * @param method - Which type of http request will be executed.\n     * @param path - API URL endpoint.\n     * @param queryParameters - Querystring parameters used for http request.\n     * @param body - Data sent with http request.\n     *\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ BaseClient.prototype.processHttpRequest = function(method, path, queryParameters, body) {\n        return this.httpClient.httpRequest(method, path, queryParameters, body, this.getComposedHttpRequestHeaders()).then(function(response) {\n            return response;\n        }).catch(function(error) {\n            return Promise.reject(error);\n        });\n    };\n    /**\n     * Process callback function for HTTP request.\n     *\n     * @param httpRequest - HTTP request for which callback will be executed\n     * @param callback - callback function to be executed.\n     */ BaseClient.prototype.processCallbackRequest = function(httpRequest, callback) {\n        if (callback) {\n            httpRequest.then(function(response) {\n                return callback(null, response);\n            }).catch(function(error) {\n                return callback(error, null);\n            });\n        }\n    };\n    /**\n     * JSON object with default headers sent by HTTP request.\n     */ BaseClient.prototype.getComposedHttpRequestHeaders = function() {\n        var _a;\n        return _a = {}, _a[this.authHeader] = this.token, _a[\"Accept\"] = \"application/json\", _a[\"User-Agent\"] = \"Postmark.JS - \".concat(this.clientVersion), _a;\n    };\n    /**\n     * Token can't be empty.\n     *\n     * @param {string} token - HTTP request token\n     */ BaseClient.prototype.verifyToken = function(token) {\n        if (!token || token.trim() === \"\") {\n            throw this.errorHandler.buildError(\"A valid API token must be provided.\");\n        }\n    };\n    /**\n     * Set default values for count and offset when doing filtering with API requests if they are not specified by filter.\n     */ BaseClient.prototype.setDefaultPaginationValues = function(filter) {\n        filter.count = filter.count || 100;\n        filter.offset = filter.offset || 0;\n    };\n    return BaseClient;\n}();\nexports[\"default\"] = BaseClient; //# sourceMappingURL=BaseClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/BaseClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/HttpClient.js":
/*!*********************************************************!*\
  !*** ./node_modules/postmark/dist/client/HttpClient.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AxiosHttpClient = void 0;\nvar axios_1 = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/index.js\");\nvar models_1 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar index_1 = __webpack_require__(/*! ./errors/index */ \"(rsc)/./node_modules/postmark/dist/client/errors/index.js\");\nvar AxiosHttpClient = /** @class */ function(_super) {\n    __extends(AxiosHttpClient, _super);\n    function AxiosHttpClient(configOptions) {\n        var _this = _super.call(this, configOptions) || this;\n        _this.errorHandler = new index_1.ErrorHandler();\n        return _this;\n    }\n    /**\n     * Create http client instance with default settings.\n     *\n     * @return {AxiosInstance}\n     */ AxiosHttpClient.prototype.initHttpClient = function(configOptions) {\n        this.clientOptions = __assign(__assign({}, models_1.HttpClient.DefaultOptions), configOptions);\n        var httpClient = axios_1.default.create({\n            baseURL: this.getBaseHttpRequestURL(),\n            timeout: this.getRequestTimeoutInMilliseconds(),\n            responseType: \"json\",\n            maxContentLength: Infinity,\n            maxBodyLength: Infinity,\n            validateStatus: function(status) {\n                return status >= 200 && status < 300;\n            }\n        });\n        httpClient.interceptors.response.use(function(response) {\n            return response.data;\n        });\n        this.client = httpClient;\n    };\n    /**\n     * Process http request.\n     *\n     * @param method - Which type of http request will be executed.\n     * @param path - API URL endpoint.\n     * @param queryParameters - Querystring parameters used for http request.\n     * @param body - Data sent with http request.\n     */ AxiosHttpClient.prototype.httpRequest = function(method, path, queryParameters, body, requestHeaders) {\n        var _this = this;\n        return this.client.request({\n            method: method,\n            url: path,\n            data: body,\n            headers: requestHeaders,\n            params: queryParameters\n        }).catch(function(errorThrown) {\n            return Promise.reject(_this.transformError(errorThrown));\n        });\n    };\n    /**\n     * Process callback function for HTTP request.\n     *\n     * @param error - request error that needs to be transformed to proper Postmark error.\n     *\n     * @return {PostmarkError} - formatted Postmark error\n     */ AxiosHttpClient.prototype.transformError = function(errorThrown) {\n        var response = errorThrown.response;\n        if (response !== undefined) {\n            var status_1 = this.adjustValue(0, response.status);\n            var errorCode = this.adjustValue(0, response.data.ErrorCode);\n            var message = this.adjustValue(errorThrown.message, response.data.Message);\n            return this.errorHandler.buildError(message, errorCode, status_1);\n        } else if (errorThrown.message !== undefined) {\n            return this.errorHandler.buildError(errorThrown.message);\n        } else {\n            return this.errorHandler.buildError(JSON.stringify(errorThrown, Object.getOwnPropertyNames(errorThrown)));\n        }\n    };\n    /**\n     * Timeout in seconds is adjusted to Axios format.\n     *\n     * @private\n     */ AxiosHttpClient.prototype.getRequestTimeoutInMilliseconds = function() {\n        return (this.clientOptions.timeout || 60) * 1000;\n    };\n    AxiosHttpClient.prototype.adjustValue = function(defaultValue, data) {\n        return data === undefined ? defaultValue : data;\n    };\n    return AxiosHttpClient;\n}(models_1.HttpClient);\nexports.AxiosHttpClient = AxiosHttpClient; //# sourceMappingURL=HttpClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/HttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/ServerClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/postmark/dist/client/ServerClient.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar BaseClient_1 = __webpack_require__(/*! ./BaseClient */ \"(rsc)/./node_modules/postmark/dist/client/BaseClient.js\");\nvar index_1 = __webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar index_2 = __webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\n/**\n * Server client class that can be used to interact with an individual Postmark Server.\n */ var ServerClient = /** @class */ function(_super) {\n    __extends(ServerClient, _super);\n    /**\n     * Create a client.\n     *\n     * @param serverToken - The token for the server that you wish to interact with.\n     * @param configOptions - Options to customize the behavior of the this client.\n     */ function ServerClient(serverToken, configOptions) {\n        return _super.call(this, serverToken, index_1.ClientOptions.AuthHeaderNames.SERVER_TOKEN, configOptions) || this;\n    }\n    /** Send a single email message.\n     *\n     * @param email - Email message to send.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmail = function(email, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email\", email, callback);\n    };\n    /**\n     * Send a batch of email messages.\n     *\n     * @param emails - An array of messages to send.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailBatch = function(emails, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/batch\", emails, callback);\n    };\n    /**\n     * Send a message using a template.\n     *\n     * @param template - Message you wish to send.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailWithTemplate = function(template, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/withTemplate\", template, callback);\n    };\n    /**\n     * Send a batch of template email messages.\n     *\n     * @param templates - An array of templated messages you wish to send using this Client.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailBatchWithTemplates = function(templates, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/batchWithTemplates\", {\n            Messages: templates\n        }, callback);\n    };\n    /**\n     * Get bounce statistic information for the associated Server.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getDeliveryStatistics = function(callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/deliveryStats\", {}, callback);\n    };\n    /**\n     * Get a batch of bounces.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounces = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.BounceFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces\", filter, callback);\n    };\n    /**\n     * Get details for a specific Bounce.\n     *\n     * @param id - The ID of the Bounce you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounce = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces/\".concat(id), {}, callback);\n    };\n    /**\n     * Get a Bounce Dump for a specific Bounce.\n     *\n     * @param id - The ID of the Bounce for which you wish to retrieve Bounce Dump.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounceDump = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces/\".concat(id, \"/dump\"), {}, callback);\n    };\n    /**\n     * Activate email address that was deactivated due to a Bounce.\n     *\n     * @param id - The ID of the Bounce for which you wish to activate the associated email.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.activateBounce = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/bounces/\".concat(id, \"/activate\"), {}, callback);\n    };\n    /**\n     * Get the list of templates associated with this server.\n     *\n     * @param filter - Optional filtering options.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTemplates = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.TemplateFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/templates\", filter, callback);\n    };\n    /**\n     * Get the a specific template associated with this server.\n     *\n     * @param idOrAlias - ID or alias for the template you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTemplate = function(idOrAlias, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/templates/\".concat(idOrAlias), {}, callback);\n    };\n    /**\n     * Delete a template associated with this server.\n     *\n     * @param idOrAlias - ID or template alias you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteTemplate = function(idOrAlias, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/templates/\".concat(idOrAlias), {}, callback);\n    };\n    /**\n     * Create a new template on the associated server.\n     *\n     * @param options - Configuration options to be used to create the Template.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createTemplate = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/templates/\", options, callback);\n    };\n    /**\n     * Update a template on the associated server.\n     *\n     * @param idOrAlias - Id or alias of the template you wish to update.\n     * @param options - Template options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editTemplate = function(idOrAlias, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/templates/\".concat(idOrAlias), options, callback);\n    };\n    /**\n     * Validate template markup to verify that it will be parsed. Also provides a recommended template\n     * model to be used when sending using the specified template content.\n     *\n     * @param options - The template content you wish to validate.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.validateTemplate = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/templates/validate\", options, callback);\n    };\n    /**\n     * Get the information for the Server associated with this Client.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getServer = function(callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/server\", {}, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param options - The options you wish to modify.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editServer = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/server\", options, callback);\n    };\n    /**\n     * Get a batch of Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessages = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessagesFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound\", filter, callback);\n    };\n    /**\n     * Get details for a specific Outbound Message.\n     *\n     * @param messageId - The ID of the OutboundMessage you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessageDetails = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/\".concat(messageId), {}, callback);\n    };\n    /**\n     * Get details for a specific Outbound Message.\n     *\n     * @param messageId - The ID of the OutboundMessage you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessageDump = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/\".concat(messageId, \"/dump\"), {}, callback);\n    };\n    /**\n     * Get a batch of Inbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundMessages = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.InboundMessagesFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/inbound\", filter, callback);\n    };\n    /**\n     * Get details for a specific Inbound Message.\n     *\n     * @param messageId - The ID of the Inbound Message you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundMessageDetails = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/inbound/\".concat(messageId, \"/details\"), {}, callback);\n    };\n    /**\n     * Cause an Inbound Message to bypass filtering rules defined on this Client's associated Server.\n     *\n     * @param messageId - The ID of the Inbound Message for which you wish to bypass the filtering rules.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.bypassBlockedInboundMessage = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.PUT, \"/messages/inbound/\".concat(messageId, \"/bypass\"), {}, callback);\n    };\n    /**\n     * Request that Postmark retry POSTing to the Inbound Hook for the specified message.\n     *\n     * @param messageId - The ID of the Inbound Message for which you wish to retry the inbound hook.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.retryInboundHookForMessage = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.PUT, \"/messages/inbound/\".concat(messageId, \"/retry\"), {}, callback);\n    };\n    /**\n     * Get the Opens for Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageOpens = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageOpensFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/opens\", filter, callback);\n    };\n    /**\n     * Get details of Opens for specific Outbound Message.\n     *\n     * @param messageId - Message ID of the message for which you wish to retrieve Opens.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageOpensForSingleMessage = function(messageId, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageOpensFilteringParameters(50, 0);\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/opens/\".concat(messageId), filter, callback);\n    };\n    /**\n     * Get the Clicks for Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageClicks = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageClicksFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/clicks\", filter, callback);\n    };\n    /**\n     * Get Click information for a single Outbound Message.\n     *\n     * @param messageId - The MessageID for which clicks should be retrieved.\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageClicksForSingleMessage = function(messageId, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageClicksFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/clicks/\".concat(messageId), filter, callback);\n    };\n    /**\n     * Get overview statistics on Outbound Messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundOverview = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound\", filter, callback);\n    };\n    /**\n     * Get statistics on email sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSentCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/sends\", filter, callback);\n    };\n    /**\n     * Get statistiscs on emails that bounced after being sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounceCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/bounces\", filter, callback);\n    };\n    /**\n     * Get SPAM complaint statistics for email sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSpamComplaintsCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/spam\", filter, callback);\n    };\n    /**\n     * Get email tracking statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTrackedEmailCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/tracked\", filter, callback);\n    };\n    /**\n     * Get Open statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens\", filter, callback);\n    };\n    /**\n     * Get Email Client Platform statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenPlatformUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/platforms\", filter, callback);\n    };\n    /**\n     * Get statistics on which Email Clients were used to open messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenClientUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/emailClients\", filter, callback);\n    };\n    /**\n     * Get Read Time statistics for messages sent from the Server associated with this Client.\n     * @param filter Optional filtering parameters.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenReadTimes = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/readTimes\", filter, callback);\n    };\n    /**\n     * Get total clicks statistics for tracked links for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks\", filter, callback);\n    };\n    /**\n     * Get browser family statistics for tracked links for messages sent from the Server associated with this Client.\n     * @param filter Optional filtering parameters.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickBrowserUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/browserFamilies\", filter, callback);\n    };\n    /**\n     * Get browser platform statistics for tracked links for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickPlatformUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/platforms\", filter, callback);\n    };\n    /**\n     * Get click location (in HTML or Text body of the email) statistics for tracked links for messages sent\n     * from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickLocation = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/location\", filter, callback);\n    };\n    /**\n     * Create an Inbound Rule Trigger.\n     *\n     * @param options - Configuration options to be used when creating this Trigger.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createInboundRuleTrigger = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/triggers/inboundRules\", options, callback);\n    };\n    /**\n     * Delete an Inbound Rule Trigger.\n     *\n     * @param id - The ID of the Inbound Rule Trigger you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteInboundRuleTrigger = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/triggers/inboundRules/\".concat(id), {}, callback);\n    };\n    /**\n     * Get a list of Inbound Rule Triggers.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundRuleTriggers = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/triggers/inboundRules\", filter, callback);\n    };\n    /**\n     * Get the list of Webhooks for specific server.\n     *\n     * @param filter - Optional filtering parameters\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getWebhooks = function(filter, callback) {\n        if (filter === void 0) {\n            filter = {};\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/webhooks\", filter, callback);\n    };\n    /**\n     * Get details for a specific Webhook.\n     *\n     * @param id - The ID of the Webhook you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getWebhook = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/webhooks/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a Webhook on the associated server.\n     *\n     * @param options - Configuration options to be used when creating Webhook trigger.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createWebhook = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/webhooks\", options, callback);\n    };\n    /**\n     * Update Webhook on the associated server.\n     *\n     * @param id - Id of the webhook you wish to update.\n     * @param options - Webhook options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editWebhook = function(id, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/webhooks/\".concat(id), options, callback);\n    };\n    /**\n     * Delete an existing Webhook.\n     *\n     * @param id - The ID of the Webhook you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteWebhook = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/webhooks/\".concat(id), {}, callback);\n    };\n    /**\n     * Get the list of message streams on a server.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageStreams = function(filter, callback) {\n        if (filter === void 0) {\n            filter = {};\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams\", filter, callback);\n    };\n    /**\n     * Get details for a specific message stream on a server.\n     *\n     * @param id - The ID of the message stream you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageStream = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams/\".concat(id), {}, callback);\n    };\n    /**\n     * Update message stream on the associated server.\n     *\n     * @param id - Id of the webhook you wish to update.\n     * @param options - Webhook options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editMessageStream = function(id, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PATCH, \"/message-streams/\".concat(id), options, callback);\n    };\n    /**\n     * Create a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createMessageStream = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams\", options, callback);\n    };\n    /**\n     * Archive a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.archiveMessageStream = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(id, \"/archive\"), {}, callback);\n    };\n    /**\n     * Unarchive a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.unarchiveMessageStream = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(id, \"/unarchive\"), {}, callback);\n    };\n    /**\n     * Get the list of suppressions for a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSuppressions = function(messageStream, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams/\".concat(messageStream, \"/suppressions/dump\"), callback);\n    };\n    /**\n     * Add email addresses to a suppressions list on a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param options - Suppressions you wish to add.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createSuppressions = function(messageStream, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(messageStream, \"/suppressions\"), options, callback);\n    };\n    /**\n     * Delete email addresses from a suppressions list on a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param options - Suppressions you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteSuppressions = function(messageStream, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(messageStream, \"/suppressions/delete\"), options, callback);\n    };\n    return ServerClient;\n}(BaseClient_1.default);\nexports[\"default\"] = ServerClient; //# sourceMappingURL=ServerClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/ServerClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js":
/*!******************************************************************!*\
  !*** ./node_modules/postmark/dist/client/errors/ErrorHandler.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ErrorHandler = void 0;\nvar Errors = __webpack_require__(/*! ./Errors */ \"(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\");\n/**\n * Handles general errors and all client request errors.\n * Client response errors are classified so that proper response error is generated.\n */ var ErrorHandler = /** @class */ function() {\n    function ErrorHandler() {}\n    /**\n     * Build general Postmark error.\n     *\n     * @param errorMessage - error message that needs to be identified and transformed to proper Postmark error.\n     *\n     * @returns properly formatted Postmark error.\n     */ ErrorHandler.prototype.buildError = function(errorMessage, code, statusCode) {\n        if (code === void 0) {\n            code = 0;\n        }\n        if (statusCode === void 0) {\n            statusCode = 0;\n        }\n        if (statusCode === 0 && code === 0) {\n            return new Errors.PostmarkError(errorMessage);\n        } else {\n            return this.buildErrorByHttpStatusCode(errorMessage, code, statusCode);\n        }\n    };\n    /**\n     * Build Postmark error based on HTTP request status.\n     *\n     * @param error - http request library error, that will be transformed to Postmark error.\n     *\n     * @returns properly formatted Postmark error.\n     */ ErrorHandler.prototype.buildErrorByHttpStatusCode = function(errorMessage, errorCode, errorStatusCode) {\n        switch(errorStatusCode){\n            case 401:\n                return new Errors.InvalidAPIKeyError(errorMessage, errorCode, errorStatusCode);\n            case 404:\n                return new Errors.PostmarkError(errorMessage, errorCode, errorStatusCode);\n            case 422:\n                return Errors.ApiInputError.buildSpecificError(errorMessage, errorCode, errorStatusCode);\n            case 429:\n                return new Errors.RateLimitExceededError(errorMessage, errorCode, errorStatusCode);\n            case 500:\n                return new Errors.InternalServerError(errorMessage, errorCode, errorStatusCode);\n            case 503:\n                return new Errors.ServiceUnavailablerError(errorMessage, errorCode, errorStatusCode);\n            default:\n                return new Errors.UnknownError(errorMessage, errorCode, errorStatusCode);\n        }\n    };\n    return ErrorHandler;\n}();\nexports.ErrorHandler = ErrorHandler; //# sourceMappingURL=ErrorHandler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvZXJyb3JzL0Vycm9ySGFuZGxlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUcsS0FBSztBQUM1QixJQUFJRyxTQUFTQyxtQkFBT0EsQ0FBQyw0RUFBVTtBQUMvQjs7O0NBR0MsR0FDRCxJQUFJRixlQUFlLFdBQVcsR0FBSTtJQUM5QixTQUFTQSxnQkFDVDtJQUNBOzs7Ozs7S0FNQyxHQUNEQSxhQUFhRyxTQUFTLENBQUNDLFVBQVUsR0FBRyxTQUFVQyxZQUFZLEVBQUVDLElBQUksRUFBRUMsVUFBVTtRQUN4RSxJQUFJRCxTQUFTLEtBQUssR0FBRztZQUFFQSxPQUFPO1FBQUc7UUFDakMsSUFBSUMsZUFBZSxLQUFLLEdBQUc7WUFBRUEsYUFBYTtRQUFHO1FBQzdDLElBQUlBLGVBQWUsS0FBS0QsU0FBUyxHQUFHO1lBQ2hDLE9BQU8sSUFBSUwsT0FBT08sYUFBYSxDQUFDSDtRQUNwQyxPQUNLO1lBQ0QsT0FBTyxJQUFJLENBQUNJLDBCQUEwQixDQUFDSixjQUFjQyxNQUFNQztRQUMvRDtJQUNKO0lBQ0E7Ozs7OztLQU1DLEdBQ0RQLGFBQWFHLFNBQVMsQ0FBQ00sMEJBQTBCLEdBQUcsU0FBVUosWUFBWSxFQUFFSyxTQUFTLEVBQUVDLGVBQWU7UUFDbEcsT0FBUUE7WUFDSixLQUFLO2dCQUNELE9BQU8sSUFBSVYsT0FBT1csa0JBQWtCLENBQUNQLGNBQWNLLFdBQVdDO1lBQ2xFLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJVixPQUFPTyxhQUFhLENBQUNILGNBQWNLLFdBQVdDO1lBQzdELEtBQUs7Z0JBQ0QsT0FBT1YsT0FBT1ksYUFBYSxDQUFDQyxrQkFBa0IsQ0FBQ1QsY0FBY0ssV0FBV0M7WUFDNUUsS0FBSztnQkFDRCxPQUFPLElBQUlWLE9BQU9jLHNCQUFzQixDQUFDVixjQUFjSyxXQUFXQztZQUN0RSxLQUFLO2dCQUNELE9BQU8sSUFBSVYsT0FBT2UsbUJBQW1CLENBQUNYLGNBQWNLLFdBQVdDO1lBQ25FLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJVixPQUFPZ0Isd0JBQXdCLENBQUNaLGNBQWNLLFdBQVdDO1lBQ3hFO2dCQUNJLE9BQU8sSUFBSVYsT0FBT2lCLFlBQVksQ0FBQ2IsY0FBY0ssV0FBV0M7UUFDaEU7SUFDSjtJQUNBLE9BQU9YO0FBQ1g7QUFDQUYsb0JBQW9CLEdBQUdFLGNBQ3ZCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9lcnJvcnMvRXJyb3JIYW5kbGVyLmpzP2EwNDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVycm9ySGFuZGxlciA9IHZvaWQgMDtcbnZhciBFcnJvcnMgPSByZXF1aXJlKFwiLi9FcnJvcnNcIik7XG4vKipcbiAqIEhhbmRsZXMgZ2VuZXJhbCBlcnJvcnMgYW5kIGFsbCBjbGllbnQgcmVxdWVzdCBlcnJvcnMuXG4gKiBDbGllbnQgcmVzcG9uc2UgZXJyb3JzIGFyZSBjbGFzc2lmaWVkIHNvIHRoYXQgcHJvcGVyIHJlc3BvbnNlIGVycm9yIGlzIGdlbmVyYXRlZC5cbiAqL1xudmFyIEVycm9ySGFuZGxlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFcnJvckhhbmRsZXIoKSB7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEJ1aWxkIGdlbmVyYWwgUG9zdG1hcmsgZXJyb3IuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZXJyb3JNZXNzYWdlIC0gZXJyb3IgbWVzc2FnZSB0aGF0IG5lZWRzIHRvIGJlIGlkZW50aWZpZWQgYW5kIHRyYW5zZm9ybWVkIHRvIHByb3BlciBQb3N0bWFyayBlcnJvci5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHByb3Blcmx5IGZvcm1hdHRlZCBQb3N0bWFyayBlcnJvci5cbiAgICAgKi9cbiAgICBFcnJvckhhbmRsZXIucHJvdG90eXBlLmJ1aWxkRXJyb3IgPSBmdW5jdGlvbiAoZXJyb3JNZXNzYWdlLCBjb2RlLCBzdGF0dXNDb2RlKSB7XG4gICAgICAgIGlmIChjb2RlID09PSB2b2lkIDApIHsgY29kZSA9IDA7IH1cbiAgICAgICAgaWYgKHN0YXR1c0NvZGUgPT09IHZvaWQgMCkgeyBzdGF0dXNDb2RlID0gMDsgfVxuICAgICAgICBpZiAoc3RhdHVzQ29kZSA9PT0gMCAmJiBjb2RlID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5Qb3N0bWFya0Vycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5idWlsZEVycm9yQnlIdHRwU3RhdHVzQ29kZShlcnJvck1lc3NhZ2UsIGNvZGUsIHN0YXR1c0NvZGUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBCdWlsZCBQb3N0bWFyayBlcnJvciBiYXNlZCBvbiBIVFRQIHJlcXVlc3Qgc3RhdHVzLlxuICAgICAqXG4gICAgICogQHBhcmFtIGVycm9yIC0gaHR0cCByZXF1ZXN0IGxpYnJhcnkgZXJyb3IsIHRoYXQgd2lsbCBiZSB0cmFuc2Zvcm1lZCB0byBQb3N0bWFyayBlcnJvci5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHByb3Blcmx5IGZvcm1hdHRlZCBQb3N0bWFyayBlcnJvci5cbiAgICAgKi9cbiAgICBFcnJvckhhbmRsZXIucHJvdG90eXBlLmJ1aWxkRXJyb3JCeUh0dHBTdGF0dXNDb2RlID0gZnVuY3Rpb24gKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpIHtcbiAgICAgICAgc3dpdGNoIChlcnJvclN0YXR1c0NvZGUpIHtcbiAgICAgICAgICAgIGNhc2UgNDAxOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLkludmFsaWRBUElLZXlFcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIGNhc2UgNDA0OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLlBvc3RtYXJrRXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgICAgICBjYXNlIDQyMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gRXJyb3JzLkFwaUlucHV0RXJyb3IuYnVpbGRTcGVjaWZpY0Vycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgY2FzZSA0Mjk6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuUmF0ZUxpbWl0RXhjZWVkZWRFcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIGNhc2UgNTAwOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLkludGVybmFsU2VydmVyRXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgICAgICBjYXNlIDUwMzpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5TZXJ2aWNlVW5hdmFpbGFibGVyRXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLlVua25vd25FcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIEVycm9ySGFuZGxlcjtcbn0oKSk7XG5leHBvcnRzLkVycm9ySGFuZGxlciA9IEVycm9ySGFuZGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVycm9ySGFuZGxlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJFcnJvckhhbmRsZXIiLCJFcnJvcnMiLCJyZXF1aXJlIiwicHJvdG90eXBlIiwiYnVpbGRFcnJvciIsImVycm9yTWVzc2FnZSIsImNvZGUiLCJzdGF0dXNDb2RlIiwiUG9zdG1hcmtFcnJvciIsImJ1aWxkRXJyb3JCeUh0dHBTdGF0dXNDb2RlIiwiZXJyb3JDb2RlIiwiZXJyb3JTdGF0dXNDb2RlIiwiSW52YWxpZEFQSUtleUVycm9yIiwiQXBpSW5wdXRFcnJvciIsImJ1aWxkU3BlY2lmaWNFcnJvciIsIlJhdGVMaW1pdEV4Y2VlZGVkRXJyb3IiLCJJbnRlcm5hbFNlcnZlckVycm9yIiwiU2VydmljZVVuYXZhaWxhYmxlckVycm9yIiwiVW5rbm93bkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/errors/Errors.js":
/*!************************************************************!*\
  !*** ./node_modules/postmark/dist/client/errors/Errors.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.InvalidEmailRequestError = exports.InactiveRecipientsError = exports.ApiInputError = exports.UnknownError = exports.RateLimitExceededError = exports.ServiceUnavailablerError = exports.InternalServerError = exports.InvalidAPIKeyError = exports.HttpError = exports.PostmarkError = void 0;\n/**\n * Standard Postmark error on which all sub-errors are based.\n */ var PostmarkError = /** @class */ function(_super) {\n    __extends(PostmarkError, _super);\n    function PostmarkError(message, code, statusCode) {\n        if (code === void 0) {\n            code = 0;\n        }\n        if (statusCode === void 0) {\n            statusCode = 0;\n        }\n        var _this = _super.call(this, message) || this;\n        _this.statusCode = statusCode;\n        _this.code = code;\n        // this is mandatory due:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(_this, PostmarkError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    PostmarkError.prototype.setUpStackTrace = function() {\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    };\n    return PostmarkError;\n}(Error);\nexports.PostmarkError = PostmarkError;\nvar HttpError = /** @class */ function(_super) {\n    __extends(HttpError, _super);\n    function HttpError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, HttpError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return HttpError;\n}(PostmarkError);\nexports.HttpError = HttpError;\nvar InvalidAPIKeyError = /** @class */ function(_super) {\n    __extends(InvalidAPIKeyError, _super);\n    function InvalidAPIKeyError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InvalidAPIKeyError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InvalidAPIKeyError;\n}(HttpError);\nexports.InvalidAPIKeyError = InvalidAPIKeyError;\nvar InternalServerError = /** @class */ function(_super) {\n    __extends(InternalServerError, _super);\n    function InternalServerError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InternalServerError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InternalServerError;\n}(HttpError);\nexports.InternalServerError = InternalServerError;\nvar ServiceUnavailablerError = /** @class */ function(_super) {\n    __extends(ServiceUnavailablerError, _super);\n    function ServiceUnavailablerError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, ServiceUnavailablerError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return ServiceUnavailablerError;\n}(HttpError);\nexports.ServiceUnavailablerError = ServiceUnavailablerError;\nvar RateLimitExceededError = /** @class */ function(_super) {\n    __extends(RateLimitExceededError, _super);\n    function RateLimitExceededError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, RateLimitExceededError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return RateLimitExceededError;\n}(HttpError);\nexports.RateLimitExceededError = RateLimitExceededError;\nvar UnknownError = /** @class */ function(_super) {\n    __extends(UnknownError, _super);\n    function UnknownError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, UnknownError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return UnknownError;\n}(HttpError);\nexports.UnknownError = UnknownError;\nvar ApiInputError = /** @class */ function(_super) {\n    __extends(ApiInputError, _super);\n    function ApiInputError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, ApiInputError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    ApiInputError.buildSpecificError = function(message, code, statusCode) {\n        switch(code){\n            case this.ERROR_CODES.inactiveRecipient:\n                return new InactiveRecipientsError(message, code, statusCode);\n            case this.ERROR_CODES.invalidEmailRequest:\n                return new InvalidEmailRequestError(message, code, statusCode);\n            default:\n                return new ApiInputError(message, code, statusCode);\n        }\n    };\n    ApiInputError.ERROR_CODES = {\n        inactiveRecipient: 406,\n        invalidEmailRequest: 300\n    };\n    return ApiInputError;\n}(HttpError);\nexports.ApiInputError = ApiInputError;\nvar InactiveRecipientsError = /** @class */ function(_super) {\n    __extends(InactiveRecipientsError, _super);\n    function InactiveRecipientsError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InactiveRecipientsError.prototype);\n        _this.setUpStackTrace();\n        _this.recipients = InactiveRecipientsError.parseInactiveRecipients(message);\n        return _this;\n    }\n    InactiveRecipientsError.parseInactiveRecipients = function(message) {\n        var result = [];\n        this.inactiveRecipientsPatterns.some(function(pattern) {\n            var regexResult = message.match(pattern);\n            if (regexResult !== null) {\n                result = regexResult[1].split(\",\").map(function(element) {\n                    return element.trim();\n                });\n                return result;\n            } else {\n                result = [];\n            }\n        });\n        return result;\n    };\n    InactiveRecipientsError.inactiveRecipientsPatterns = [\n        /Found inactive addresses: (.+?)\\.? Inactive/,\n        /these inactive addresses: (.+?)\\.?$/\n    ];\n    return InactiveRecipientsError;\n}(ApiInputError);\nexports.InactiveRecipientsError = InactiveRecipientsError;\nvar InvalidEmailRequestError = /** @class */ function(_super) {\n    __extends(InvalidEmailRequestError, _super);\n    function InvalidEmailRequestError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InvalidEmailRequestError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InvalidEmailRequestError;\n}(ApiInputError);\nexports.InvalidEmailRequestError = InvalidEmailRequestError; //# sourceMappingURL=Errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/errors/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/postmark/dist/client/errors/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./ErrorHandler */ \"(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Errors */ \"(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvZXJyb3JzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNQLENBQUMsRUFBRVEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtULEVBQUcsSUFBSVMsTUFBTSxhQUFhLENBQUNaLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUliLGdCQUFnQlksVUFBU1IsR0FBR1M7QUFDM0g7QUFDQVosOENBQTZDO0lBQUVnQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyx3RkFBZ0IsR0FBR047QUFDeENELGFBQWFPLG1CQUFPQSxDQUFDLDRFQUFVLEdBQUdOLFVBQ2xDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9lcnJvcnMvaW5kZXguanM/ZjAxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Vycm9ySGFuZGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRXJyb3JzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/errors/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/bounces/Bounce.js":
/*!********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/bounces/Bounce.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Bounce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2JvdW5jZXMvQm91bmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvYm91bmNlcy9Cb3VuY2UuanM/MWNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJvdW5jZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/bounces/Bounce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BounceFilteringParameters = exports.BounceType = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar BounceType;\n(function(BounceType) {\n    BounceType[\"HardBounce\"] = \"HardBounce\";\n    BounceType[\"Transient\"] = \"Transient\";\n    BounceType[\"Unsubscribe\"] = \"Unsubscribe\";\n    BounceType[\"Subscribe\"] = \"Subscribe\";\n    BounceType[\"AutoResponder\"] = \"AutoResponder\";\n    BounceType[\"AddressChange\"] = \"AddressChange\";\n    BounceType[\"DnsError\"] = \"DnsError\";\n    BounceType[\"SpamNotification\"] = \"SpamNotification\";\n    BounceType[\"OpenRelayTest\"] = \"OpenRelayTest\";\n    BounceType[\"Unknown\"] = \"Unknown\";\n    BounceType[\"SoftBounce\"] = \"SoftBounce\";\n    BounceType[\"VirusNotification\"] = \"VirusNotification\";\n    BounceType[\"ChallengeVerification\"] = \"ChallengeVerification\";\n    BounceType[\"BadEmailAddress\"] = \"BadEmailAddress\";\n    BounceType[\"SpamComplaint\"] = \"SpamComplaint\";\n    BounceType[\"ManuallyDeactivated\"] = \"ManuallyDeactivated\";\n    BounceType[\"Unconfirmed\"] = \"Unconfirmed\";\n    BounceType[\"Blocked\"] = \"Blocked\";\n    BounceType[\"SMTPApiError\"] = \"SMTPApiError\";\n    BounceType[\"InboundError\"] = \"InboundError\";\n    BounceType[\"DMARCPolicy\"] = \"DMARCPolicy\";\n    BounceType[\"TemplateRenderingFailed\"] = \"TemplateRenderingFailed\";\n})(BounceType = exports.BounceType || (exports.BounceType = {}));\n/**\n * Describes filtering parameters that can be used when retrieving bounces.\n * When pagination parameters are not specified, default values are set.\n */ var BounceFilteringParameters = /** @class */ function(_super) {\n    __extends(BounceFilteringParameters, _super);\n    function BounceFilteringParameters(count, offset, type, inactive, emailFilter, tag, messageID, fromDate, toDate, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.type = type;\n        _this.inactive = inactive;\n        _this.emailFilter = emailFilter;\n        _this.tag = tag;\n        _this.messageID = messageID;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return BounceFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.BounceFilteringParameters = BounceFilteringParameters; //# sourceMappingURL=BounceFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/Callback.js":
/*!*********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/Callback.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9DYWxsYmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9DYWxsYmFjay5qcz9jYjhmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/Callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/ClientOptions.js":
/*!**************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/ClientOptions.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ClientOptions = void 0;\nvar ClientOptions;\n(function(ClientOptions) {\n    var Configuration = /** @class */ function() {\n        function Configuration(useHttps, requestHost, timeout) {\n            this.useHttps = useHttps;\n            this.requestHost = requestHost;\n            this.timeout = timeout;\n        }\n        return Configuration;\n    }();\n    ClientOptions.Configuration = Configuration;\n    var HttpMethod;\n    (function(HttpMethod) {\n        HttpMethod[\"GET\"] = \"GET\";\n        HttpMethod[\"POST\"] = \"POST\";\n        HttpMethod[\"DELETE\"] = \"DELETE\";\n        HttpMethod[\"PUT\"] = \"PUT\";\n        HttpMethod[\"OPTIONS\"] = \"OPTIONS\";\n        HttpMethod[\"HEAD\"] = \"HEAD\";\n        HttpMethod[\"PATCH\"] = \"PATCH\";\n    })(HttpMethod = ClientOptions.HttpMethod || (ClientOptions.HttpMethod = {}));\n    var AuthHeaderNames;\n    (function(AuthHeaderNames) {\n        AuthHeaderNames[\"SERVER_TOKEN\"] = \"X-Postmark-Server-Token\";\n        AuthHeaderNames[\"ACCOUNT_TOKEN\"] = \"X-Postmark-Account-Token\";\n    })(AuthHeaderNames = ClientOptions.AuthHeaderNames || (ClientOptions.AuthHeaderNames = {}));\n})(ClientOptions = exports.ClientOptions || (exports.ClientOptions = {})); //# sourceMappingURL=ClientOptions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9DbGllbnRPcHRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBRyxLQUFLO0FBQzdCLElBQUlFO0FBQ0gsVUFBVUEsYUFBYTtJQUNwQixJQUFJQyxnQkFBZ0IsV0FBVyxHQUFJO1FBQy9CLFNBQVNBLGNBQWNDLFFBQVEsRUFBRUMsV0FBVyxFQUFFQyxPQUFPO1lBQ2pELElBQUksQ0FBQ0YsUUFBUSxHQUFHQTtZQUNoQixJQUFJLENBQUNDLFdBQVcsR0FBR0E7WUFDbkIsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO1FBQ25CO1FBQ0EsT0FBT0g7SUFDWDtJQUNBRCxjQUFjQyxhQUFhLEdBQUdBO0lBQzlCLElBQUlJO0lBQ0gsVUFBVUEsVUFBVTtRQUNqQkEsVUFBVSxDQUFDLE1BQU0sR0FBRztRQUNwQkEsVUFBVSxDQUFDLE9BQU8sR0FBRztRQUNyQkEsVUFBVSxDQUFDLFNBQVMsR0FBRztRQUN2QkEsVUFBVSxDQUFDLE1BQU0sR0FBRztRQUNwQkEsVUFBVSxDQUFDLFVBQVUsR0FBRztRQUN4QkEsVUFBVSxDQUFDLE9BQU8sR0FBRztRQUNyQkEsVUFBVSxDQUFDLFFBQVEsR0FBRztJQUMxQixHQUFHQSxhQUFhTCxjQUFjSyxVQUFVLElBQUtMLENBQUFBLGNBQWNLLFVBQVUsR0FBRyxDQUFDO0lBQ3pFLElBQUlDO0lBQ0gsVUFBVUEsZUFBZTtRQUN0QkEsZUFBZSxDQUFDLGVBQWUsR0FBRztRQUNsQ0EsZUFBZSxDQUFDLGdCQUFnQixHQUFHO0lBQ3ZDLEdBQUdBLGtCQUFrQk4sY0FBY00sZUFBZSxJQUFLTixDQUFBQSxjQUFjTSxlQUFlLEdBQUcsQ0FBQztBQUM1RixHQUFHTixnQkFBZ0JGLFFBQVFFLGFBQWEsSUFBS0YsQ0FBQUEscUJBQXFCLEdBQUcsQ0FBQyxLQUN0RSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9DbGllbnRPcHRpb25zLmpzPzkyYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNsaWVudE9wdGlvbnMgPSB2b2lkIDA7XG52YXIgQ2xpZW50T3B0aW9ucztcbihmdW5jdGlvbiAoQ2xpZW50T3B0aW9ucykge1xuICAgIHZhciBDb25maWd1cmF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBDb25maWd1cmF0aW9uKHVzZUh0dHBzLCByZXF1ZXN0SG9zdCwgdGltZW91dCkge1xuICAgICAgICAgICAgdGhpcy51c2VIdHRwcyA9IHVzZUh0dHBzO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0SG9zdCA9IHJlcXVlc3RIb3N0O1xuICAgICAgICAgICAgdGhpcy50aW1lb3V0ID0gdGltZW91dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQ29uZmlndXJhdGlvbjtcbiAgICB9KCkpO1xuICAgIENsaWVudE9wdGlvbnMuQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb247XG4gICAgdmFyIEh0dHBNZXRob2Q7XG4gICAgKGZ1bmN0aW9uIChIdHRwTWV0aG9kKSB7XG4gICAgICAgIEh0dHBNZXRob2RbXCJHRVRcIl0gPSBcIkdFVFwiO1xuICAgICAgICBIdHRwTWV0aG9kW1wiUE9TVFwiXSA9IFwiUE9TVFwiO1xuICAgICAgICBIdHRwTWV0aG9kW1wiREVMRVRFXCJdID0gXCJERUxFVEVcIjtcbiAgICAgICAgSHR0cE1ldGhvZFtcIlBVVFwiXSA9IFwiUFVUXCI7XG4gICAgICAgIEh0dHBNZXRob2RbXCJPUFRJT05TXCJdID0gXCJPUFRJT05TXCI7XG4gICAgICAgIEh0dHBNZXRob2RbXCJIRUFEXCJdID0gXCJIRUFEXCI7XG4gICAgICAgIEh0dHBNZXRob2RbXCJQQVRDSFwiXSA9IFwiUEFUQ0hcIjtcbiAgICB9KShIdHRwTWV0aG9kID0gQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kIHx8IChDbGllbnRPcHRpb25zLkh0dHBNZXRob2QgPSB7fSkpO1xuICAgIHZhciBBdXRoSGVhZGVyTmFtZXM7XG4gICAgKGZ1bmN0aW9uIChBdXRoSGVhZGVyTmFtZXMpIHtcbiAgICAgICAgQXV0aEhlYWRlck5hbWVzW1wiU0VSVkVSX1RPS0VOXCJdID0gXCJYLVBvc3RtYXJrLVNlcnZlci1Ub2tlblwiO1xuICAgICAgICBBdXRoSGVhZGVyTmFtZXNbXCJBQ0NPVU5UX1RPS0VOXCJdID0gXCJYLVBvc3RtYXJrLUFjY291bnQtVG9rZW5cIjtcbiAgICB9KShBdXRoSGVhZGVyTmFtZXMgPSBDbGllbnRPcHRpb25zLkF1dGhIZWFkZXJOYW1lcyB8fCAoQ2xpZW50T3B0aW9ucy5BdXRoSGVhZGVyTmFtZXMgPSB7fSkpO1xufSkoQ2xpZW50T3B0aW9ucyA9IGV4cG9ydHMuQ2xpZW50T3B0aW9ucyB8fCAoZXhwb3J0cy5DbGllbnRPcHRpb25zID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudE9wdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ2xpZW50T3B0aW9ucyIsIkNvbmZpZ3VyYXRpb24iLCJ1c2VIdHRwcyIsInJlcXVlc3RIb3N0IiwidGltZW91dCIsIkh0dHBNZXRob2QiLCJBdXRoSGVhZGVyTmFtZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/ClientOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/DefaultResponse.js":
/*!****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/DefaultResponse.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=DefaultResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9EZWZhdWx0UmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvRGVmYXVsdFJlc3BvbnNlLmpzPzI2NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWZhdWx0UmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/DefaultResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js":
/*!********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/FilteringParameters.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FilteringParameters = void 0;\n/**\n * Describes default filtering parameters that can be used.\n * When pagination parameters are not specified, default values are set.\n */ var FilteringParameters = /** @class */ function() {\n    function FilteringParameters(count, offset) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        this.count = count;\n        this.offset = offset;\n    }\n    return FilteringParameters;\n}();\nexports.FilteringParameters = FilteringParameters; //# sourceMappingURL=FilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyQkFBMkIsR0FBRyxLQUFLO0FBQ25DOzs7Q0FHQyxHQUNELElBQUlFLHNCQUFzQixXQUFXLEdBQUk7SUFDckMsU0FBU0Esb0JBQW9CQyxLQUFLLEVBQUVDLE1BQU07UUFDdEMsSUFBSUQsVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJLENBQUNELEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNDLE1BQU0sR0FBR0E7SUFDbEI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FGLDJCQUEyQixHQUFHRSxxQkFDOUIsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVycy5qcz81YmJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaWx0ZXJpbmdQYXJhbWV0ZXJzID0gdm9pZCAwO1xuLyoqXG4gKiBEZXNjcmliZXMgZGVmYXVsdCBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkLlxuICogV2hlbiBwYWdpbmF0aW9uIHBhcmFtZXRlcnMgYXJlIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgdmFsdWVzIGFyZSBzZXQuXG4gKi9cbnZhciBGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEZpbHRlcmluZ1BhcmFtZXRlcnMoY291bnQsIG9mZnNldCkge1xuICAgICAgICBpZiAoY291bnQgPT09IHZvaWQgMCkgeyBjb3VudCA9IDEwMDsgfVxuICAgICAgICBpZiAob2Zmc2V0ID09PSB2b2lkIDApIHsgb2Zmc2V0ID0gMDsgfVxuICAgICAgICB0aGlzLmNvdW50ID0gY291bnQ7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIH1cbiAgICByZXR1cm4gRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oKSk7XG5leHBvcnRzLkZpbHRlcmluZ1BhcmFtZXRlcnMgPSBGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiY291bnQiLCJvZmZzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/HttpClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/HttpClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HttpClient = void 0;\nvar HttpClient = /** @class */ function() {\n    function HttpClient(configOptions) {\n        this.clientOptions = __assign(__assign({}, HttpClient.DefaultOptions), configOptions);\n        this.initHttpClient(this.clientOptions);\n    }\n    HttpClient.prototype.getBaseHttpRequestURL = function() {\n        var scheme = this.clientOptions.useHttps ? \"https\" : \"http\";\n        return \"\".concat(scheme, \"://\").concat(this.clientOptions.requestHost);\n    };\n    /**\n     * Http Client connection configuration options.\n     * You may modify these values and new clients will use them.\n     * Any values provided to a Client constructor will override default options.\n     */ HttpClient.DefaultOptions = {\n        useHttps: true,\n        requestHost: \"api.postmarkapp.com\",\n        timeout: 180\n    };\n    return HttpClient;\n}();\nexports.HttpClient = HttpClient; //# sourceMappingURL=HttpClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9IdHRwQ2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsV0FBVyxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFFBQVEsSUFBSztJQUN0Q0EsV0FBV0MsT0FBT0MsTUFBTSxJQUFJLFNBQVNDLENBQUM7UUFDbEMsSUFBSyxJQUFJQyxHQUFHQyxJQUFJLEdBQUdDLElBQUlDLFVBQVVDLE1BQU0sRUFBRUgsSUFBSUMsR0FBR0QsSUFBSztZQUNqREQsSUFBSUcsU0FBUyxDQUFDRixFQUFFO1lBQ2hCLElBQUssSUFBSUksS0FBS0wsRUFBRyxJQUFJSCxPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUN6RE4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUNuQjtRQUNBLE9BQU9OO0lBQ1g7SUFDQSxPQUFPSCxTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFTjtBQUNoQztBQUNBTiw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUcsS0FBSztBQUMxQixJQUFJRSxhQUFhLFdBQVcsR0FBSTtJQUM1QixTQUFTQSxXQUFXQyxhQUFhO1FBQzdCLElBQUksQ0FBQ0MsYUFBYSxHQUFHbkIsU0FBU0EsU0FBUyxDQUFDLEdBQUdpQixXQUFXRyxjQUFjLEdBQUdGO1FBQ3ZFLElBQUksQ0FBQ0csY0FBYyxDQUFDLElBQUksQ0FBQ0YsYUFBYTtJQUMxQztJQUNBRixXQUFXUCxTQUFTLENBQUNZLHFCQUFxQixHQUFHO1FBQ3pDLElBQUlDLFNBQVMsSUFBSSxDQUFDSixhQUFhLENBQUNLLFFBQVEsR0FBRyxVQUFVO1FBQ3JELE9BQU8sR0FBR0MsTUFBTSxDQUFDRixRQUFRLE9BQU9FLE1BQU0sQ0FBQyxJQUFJLENBQUNOLGFBQWEsQ0FBQ08sV0FBVztJQUN6RTtJQUNBOzs7O0tBSUMsR0FDRFQsV0FBV0csY0FBYyxHQUFHO1FBQ3hCSSxVQUFVO1FBQ1ZFLGFBQWE7UUFDYkMsU0FBUztJQUNiO0lBQ0EsT0FBT1Y7QUFDWDtBQUNBRixrQkFBa0IsR0FBR0UsWUFDckIsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvSHR0cENsaWVudC5qcz8wMmE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSHR0cENsaWVudCA9IHZvaWQgMDtcbnZhciBIdHRwQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEh0dHBDbGllbnQoY29uZmlnT3B0aW9ucykge1xuICAgICAgICB0aGlzLmNsaWVudE9wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgSHR0cENsaWVudC5EZWZhdWx0T3B0aW9ucyksIGNvbmZpZ09wdGlvbnMpO1xuICAgICAgICB0aGlzLmluaXRIdHRwQ2xpZW50KHRoaXMuY2xpZW50T3B0aW9ucyk7XG4gICAgfVxuICAgIEh0dHBDbGllbnQucHJvdG90eXBlLmdldEJhc2VIdHRwUmVxdWVzdFVSTCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNjaGVtZSA9IHRoaXMuY2xpZW50T3B0aW9ucy51c2VIdHRwcyA/IFwiaHR0cHNcIiA6IFwiaHR0cFwiO1xuICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQoc2NoZW1lLCBcIjovL1wiKS5jb25jYXQodGhpcy5jbGllbnRPcHRpb25zLnJlcXVlc3RIb3N0KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEh0dHAgQ2xpZW50IGNvbm5lY3Rpb24gY29uZmlndXJhdGlvbiBvcHRpb25zLlxuICAgICAqIFlvdSBtYXkgbW9kaWZ5IHRoZXNlIHZhbHVlcyBhbmQgbmV3IGNsaWVudHMgd2lsbCB1c2UgdGhlbS5cbiAgICAgKiBBbnkgdmFsdWVzIHByb3ZpZGVkIHRvIGEgQ2xpZW50IGNvbnN0cnVjdG9yIHdpbGwgb3ZlcnJpZGUgZGVmYXVsdCBvcHRpb25zLlxuICAgICAqL1xuICAgIEh0dHBDbGllbnQuRGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgICAgIHVzZUh0dHBzOiB0cnVlLFxuICAgICAgICByZXF1ZXN0SG9zdDogXCJhcGkucG9zdG1hcmthcHAuY29tXCIsXG4gICAgICAgIHRpbWVvdXQ6IDE4MCxcbiAgICB9O1xuICAgIHJldHVybiBIdHRwQ2xpZW50O1xufSgpKTtcbmV4cG9ydHMuSHR0cENsaWVudCA9IEh0dHBDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IdHRwQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsInQiLCJzIiwiaSIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkh0dHBDbGllbnQiLCJjb25maWdPcHRpb25zIiwiY2xpZW50T3B0aW9ucyIsIkRlZmF1bHRPcHRpb25zIiwiaW5pdEh0dHBDbGllbnQiLCJnZXRCYXNlSHR0cFJlcXVlc3RVUkwiLCJzY2hlbWUiLCJ1c2VIdHRwcyIsImNvbmNhdCIsInJlcXVlc3RIb3N0IiwidGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/HttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/SupportingTypes.js":
/*!****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/SupportingTypes.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SupportingTypes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9TdXBwb3J0aW5nVHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvU3VwcG9ydGluZ1R5cGVzLmpzP2Q1M2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdXBwb3J0aW5nVHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/SupportingTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.DataRemovalRequest = exports.DataRemovalStatusTypes = void 0;\nvar DataRemovalStatusTypes;\n(function(DataRemovalStatusTypes) {\n    DataRemovalStatusTypes[\"Pending\"] = \"Pending\";\n    DataRemovalStatusTypes[\"Done\"] = \"Done\";\n})(DataRemovalStatusTypes = exports.DataRemovalStatusTypes || (exports.DataRemovalStatusTypes = {}));\nvar DataRemovalRequest = /** @class */ function() {\n    function DataRemovalRequest(requestedBy, requestedFor, notifyWhenCompleted) {\n        this.RequestedBy = requestedBy;\n        this.RequestedFor = requestedFor;\n        this.NotifyWhenCompleted = notifyWhenCompleted;\n    }\n    return DataRemovalRequest;\n}();\nexports.DataRemovalRequest = DataRemovalRequest; //# sourceMappingURL=DataRemovals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2RhdGFfcmVtb3ZhbC9EYXRhUmVtb3ZhbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDBCQUEwQixHQUFHQSw4QkFBOEIsR0FBRyxLQUFLO0FBQ25FLElBQUlHO0FBQ0gsVUFBVUEsc0JBQXNCO0lBQzdCQSxzQkFBc0IsQ0FBQyxVQUFVLEdBQUc7SUFDcENBLHNCQUFzQixDQUFDLE9BQU8sR0FBRztBQUNyQyxHQUFHQSx5QkFBeUJILFFBQVFHLHNCQUFzQixJQUFLSCxDQUFBQSw4QkFBOEIsR0FBRyxDQUFDO0FBQ2pHLElBQUlFLHFCQUFxQixXQUFXLEdBQUk7SUFDcEMsU0FBU0EsbUJBQW1CRSxXQUFXLEVBQUVDLFlBQVksRUFBRUMsbUJBQW1CO1FBQ3RFLElBQUksQ0FBQ0MsV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNJLFlBQVksR0FBR0g7UUFDcEIsSUFBSSxDQUFDSSxtQkFBbUIsR0FBR0g7SUFDL0I7SUFDQSxPQUFPSjtBQUNYO0FBQ0FGLDBCQUEwQixHQUFHRSxvQkFDN0Isd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9kYXRhX3JlbW92YWwvRGF0YVJlbW92YWxzLmpzP2VhZGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRhdGFSZW1vdmFsUmVxdWVzdCA9IGV4cG9ydHMuRGF0YVJlbW92YWxTdGF0dXNUeXBlcyA9IHZvaWQgMDtcbnZhciBEYXRhUmVtb3ZhbFN0YXR1c1R5cGVzO1xuKGZ1bmN0aW9uIChEYXRhUmVtb3ZhbFN0YXR1c1R5cGVzKSB7XG4gICAgRGF0YVJlbW92YWxTdGF0dXNUeXBlc1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBEYXRhUmVtb3ZhbFN0YXR1c1R5cGVzW1wiRG9uZVwiXSA9IFwiRG9uZVwiO1xufSkoRGF0YVJlbW92YWxTdGF0dXNUeXBlcyA9IGV4cG9ydHMuRGF0YVJlbW92YWxTdGF0dXNUeXBlcyB8fCAoZXhwb3J0cy5EYXRhUmVtb3ZhbFN0YXR1c1R5cGVzID0ge30pKTtcbnZhciBEYXRhUmVtb3ZhbFJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGF0YVJlbW92YWxSZXF1ZXN0KHJlcXVlc3RlZEJ5LCByZXF1ZXN0ZWRGb3IsIG5vdGlmeVdoZW5Db21wbGV0ZWQpIHtcbiAgICAgICAgdGhpcy5SZXF1ZXN0ZWRCeSA9IHJlcXVlc3RlZEJ5O1xuICAgICAgICB0aGlzLlJlcXVlc3RlZEZvciA9IHJlcXVlc3RlZEZvcjtcbiAgICAgICAgdGhpcy5Ob3RpZnlXaGVuQ29tcGxldGVkID0gbm90aWZ5V2hlbkNvbXBsZXRlZDtcbiAgICB9XG4gICAgcmV0dXJuIERhdGFSZW1vdmFsUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLkRhdGFSZW1vdmFsUmVxdWVzdCA9IERhdGFSZW1vdmFsUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURhdGFSZW1vdmFscy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJEYXRhUmVtb3ZhbFJlcXVlc3QiLCJEYXRhUmVtb3ZhbFN0YXR1c1R5cGVzIiwicmVxdWVzdGVkQnkiLCJyZXF1ZXN0ZWRGb3IiLCJub3RpZnlXaGVuQ29tcGxldGVkIiwiUmVxdWVzdGVkQnkiLCJSZXF1ZXN0ZWRGb3IiLCJOb3RpZnlXaGVuQ29tcGxldGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/domains/Domain.js":
/*!********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/domains/Domain.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateDomainRequest = exports.CreateDomainRequest = void 0;\nvar CreateDomainRequest = /** @class */ function() {\n    function CreateDomainRequest(Name, ReturnPathDomain) {\n        this.Name = Name;\n        this.ReturnPathDomain = ReturnPathDomain;\n    }\n    return CreateDomainRequest;\n}();\nexports.CreateDomainRequest = CreateDomainRequest;\nvar UpdateDomainRequest = /** @class */ function() {\n    function UpdateDomainRequest(ReturnPathDomain) {\n        this.ReturnPathDomain = ReturnPathDomain;\n    }\n    return UpdateDomainRequest;\n}();\nexports.UpdateDomainRequest = UpdateDomainRequest; //# sourceMappingURL=Domain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2RvbWFpbnMvRG9tYWluLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyQkFBMkIsR0FBR0EsMkJBQTJCLEdBQUcsS0FBSztBQUNqRSxJQUFJRyxzQkFBc0IsV0FBVyxHQUFJO0lBQ3JDLFNBQVNBLG9CQUFvQkMsSUFBSSxFQUFFQyxnQkFBZ0I7UUFDL0MsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxnQkFBZ0IsR0FBR0E7SUFDNUI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FILDJCQUEyQixHQUFHRztBQUM5QixJQUFJRCxzQkFBc0IsV0FBVyxHQUFJO0lBQ3JDLFNBQVNBLG9CQUFvQkcsZ0JBQWdCO1FBQ3pDLElBQUksQ0FBQ0EsZ0JBQWdCLEdBQUdBO0lBQzVCO0lBQ0EsT0FBT0g7QUFDWDtBQUNBRiwyQkFBMkIsR0FBR0UscUJBQzlCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvZG9tYWlucy9Eb21haW4uanM/NzEzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlRG9tYWluUmVxdWVzdCA9IGV4cG9ydHMuQ3JlYXRlRG9tYWluUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBDcmVhdGVEb21haW5SZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENyZWF0ZURvbWFpblJlcXVlc3QoTmFtZSwgUmV0dXJuUGF0aERvbWFpbikge1xuICAgICAgICB0aGlzLk5hbWUgPSBOYW1lO1xuICAgICAgICB0aGlzLlJldHVyblBhdGhEb21haW4gPSBSZXR1cm5QYXRoRG9tYWluO1xuICAgIH1cbiAgICByZXR1cm4gQ3JlYXRlRG9tYWluUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLkNyZWF0ZURvbWFpblJlcXVlc3QgPSBDcmVhdGVEb21haW5SZXF1ZXN0O1xudmFyIFVwZGF0ZURvbWFpblJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVXBkYXRlRG9tYWluUmVxdWVzdChSZXR1cm5QYXRoRG9tYWluKSB7XG4gICAgICAgIHRoaXMuUmV0dXJuUGF0aERvbWFpbiA9IFJldHVyblBhdGhEb21haW47XG4gICAgfVxuICAgIHJldHVybiBVcGRhdGVEb21haW5SZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuVXBkYXRlRG9tYWluUmVxdWVzdCA9IFVwZGF0ZURvbWFpblJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Eb21haW4uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlRG9tYWluUmVxdWVzdCIsIkNyZWF0ZURvbWFpblJlcXVlc3QiLCJOYW1lIiwiUmV0dXJuUGF0aERvbWFpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/domains/Domain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./client/ClientOptions */ \"(rsc)/./node_modules/postmark/dist/client/models/client/ClientOptions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/SupportingTypes */ \"(rsc)/./node_modules/postmark/dist/client/models/client/SupportingTypes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/HttpClient */ \"(rsc)/./node_modules/postmark/dist/client/models/client/HttpClient.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/Callback */ \"(rsc)/./node_modules/postmark/dist/client/models/client/Callback.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/DefaultResponse */ \"(rsc)/./node_modules/postmark/dist/client/models/client/DefaultResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bounces/Bounce */ \"(rsc)/./node_modules/postmark/dist/client/models/bounces/Bounce.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bounces/BounceFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./message/Message */ \"(rsc)/./node_modules/postmark/dist/client/models/message/Message.js\"), exports);\n__exportStar(__webpack_require__(/*! ./message/SupportingTypes */ \"(rsc)/./node_modules/postmark/dist/client/models/message/SupportingTypes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessage */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessageOpen */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessageClick */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/InboundMessage */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/InboundMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/MessageFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./templates/Template */ \"(rsc)/./node_modules/postmark/dist/client/models/templates/Template.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/Server */ \"(rsc)/./node_modules/postmark/dist/client/models/server/Server.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/Servers */ \"(rsc)/./node_modules/postmark/dist/client/models/server/Servers.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/ServerFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./domains/Domain */ \"(rsc)/./node_modules/postmark/dist/client/models/domains/Domain.js\"), exports);\n__exportStar(__webpack_require__(/*! ./senders/Signature */ \"(rsc)/./node_modules/postmark/dist/client/models/senders/Signature.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/Suppression */ \"(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js\"), exports);\n__exportStar(__webpack_require__(/*! ./stats/Stats */ \"(rsc)/./node_modules/postmark/dist/client/models/stats/Stats.js\"), exports);\n__exportStar(__webpack_require__(/*! ./stats/StatsFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./triggers/InboundRule */ \"(rsc)/./node_modules/postmark/dist/client/models/triggers/InboundRule.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/Webhooks */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhooks.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/Webhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/WebhookFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/BounceWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/DeliveryWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/ClickWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/OpenWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/SubscriptionChangeWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/InboundWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/Suppression */ \"(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js\"), exports);\n__exportStar(__webpack_require__(/*! ./streams/MessageStream */ \"(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStream.js\"), exports);\n__exportStar(__webpack_require__(/*! ./streams/MessageStreamsFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./data_removal/DataRemovals */ \"(rsc)/./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNQLENBQUMsRUFBRVEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtULEVBQUcsSUFBSVMsTUFBTSxhQUFhLENBQUNaLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUliLGdCQUFnQlksVUFBU1IsR0FBR1M7QUFDM0g7QUFDQVosOENBQTZDO0lBQUVnQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyx3R0FBd0IsR0FBR047QUFDaERELGFBQWFPLG1CQUFPQSxDQUFDLDRHQUEwQixHQUFHTjtBQUNsREQsYUFBYU8sbUJBQU9BLENBQUMsa0dBQXFCLEdBQUdOO0FBQzdDRCxhQUFhTyxtQkFBT0EsQ0FBQyw4RkFBbUIsR0FBR047QUFDM0NELGFBQWFPLG1CQUFPQSxDQUFDLDRHQUEwQixHQUFHTjtBQUNsREQsYUFBYU8sbUJBQU9BLENBQUMsb0hBQThCLEdBQUdOO0FBQ3RERCxhQUFhTyxtQkFBT0EsQ0FBQyw0RkFBa0IsR0FBR047QUFDMUNELGFBQWFPLG1CQUFPQSxDQUFDLGtJQUFxQyxHQUFHTjtBQUM3REQsYUFBYU8sbUJBQU9BLENBQUMsOEZBQW1CLEdBQUdOO0FBQzNDRCxhQUFhTyxtQkFBT0EsQ0FBQyw4R0FBMkIsR0FBR047QUFDbkRELGFBQWFPLG1CQUFPQSxDQUFDLGdIQUE0QixHQUFHTjtBQUNwREQsYUFBYU8sbUJBQU9BLENBQUMsd0hBQWdDLEdBQUdOO0FBQ3hERCxhQUFhTyxtQkFBT0EsQ0FBQywwSEFBaUMsR0FBR047QUFDekRELGFBQWFPLG1CQUFPQSxDQUFDLDhHQUEyQixHQUFHTjtBQUNuREQsYUFBYU8sbUJBQU9BLENBQUMsc0lBQXVDLEdBQUdOO0FBQy9ERCxhQUFhTyxtQkFBT0EsQ0FBQyxvR0FBc0IsR0FBR047QUFDOUNELGFBQWFPLG1CQUFPQSxDQUFDLDBGQUFpQixHQUFHTjtBQUN6Q0QsYUFBYU8sbUJBQU9BLENBQUMsNEZBQWtCLEdBQUdOO0FBQzFDRCxhQUFhTyxtQkFBT0EsQ0FBQyxnSUFBb0MsR0FBR047QUFDNURELGFBQWFPLG1CQUFPQSxDQUFDLDRGQUFrQixHQUFHTjtBQUMxQ0QsYUFBYU8sbUJBQU9BLENBQUMsa0dBQXFCLEdBQUdOO0FBQzdDRCxhQUFhTyxtQkFBT0EsQ0FBQyxnSEFBNEIsR0FBR047QUFDcERELGFBQWFPLG1CQUFPQSxDQUFDLHNGQUFlLEdBQUdOO0FBQ3ZDRCxhQUFhTyxtQkFBT0EsQ0FBQyw0SEFBa0MsR0FBR047QUFDMURELGFBQWFPLG1CQUFPQSxDQUFDLHdHQUF3QixHQUFHTjtBQUNoREQsYUFBYU8sbUJBQU9BLENBQUMsa0dBQXFCLEdBQUdOO0FBQzdDRCxhQUFhTyxtQkFBT0EsQ0FBQyxnR0FBb0IsR0FBR047QUFDNUNELGFBQWFPLG1CQUFPQSxDQUFDLHNJQUF1QyxHQUFHTjtBQUMvREQsYUFBYU8sbUJBQU9BLENBQUMsNEhBQWtDLEdBQUdOO0FBQzFERCxhQUFhTyxtQkFBT0EsQ0FBQyxnSUFBb0MsR0FBR047QUFDNURELGFBQWFPLG1CQUFPQSxDQUFDLDBIQUFpQyxHQUFHTjtBQUN6REQsYUFBYU8sbUJBQU9BLENBQUMsd0hBQWdDLEdBQUdOO0FBQ3hERCxhQUFhTyxtQkFBT0EsQ0FBQyxvSkFBOEMsR0FBR047QUFDdEVELGFBQWFPLG1CQUFPQSxDQUFDLDhIQUFtQyxHQUFHTjtBQUMzREQsYUFBYU8sbUJBQU9BLENBQUMsZ0hBQTRCLEdBQUdOO0FBQ3BERCxhQUFhTyxtQkFBT0EsQ0FBQywwR0FBeUIsR0FBR047QUFDakRELGFBQWFPLG1CQUFPQSxDQUFDLGtKQUE2QyxHQUFHTjtBQUNyRUQsYUFBYU8sbUJBQU9BLENBQUMsa0hBQTZCLEdBQUdOLFVBQ3JELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvaW5kZXguanM/MzNkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NsaWVudC9DbGllbnRPcHRpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jbGllbnQvU3VwcG9ydGluZ1R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jbGllbnQvSHR0cENsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2xpZW50L0NhbGxiYWNrXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jbGllbnQvRGVmYXVsdFJlc3BvbnNlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVyc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYm91bmNlcy9Cb3VuY2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2JvdW5jZXMvQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVyc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVzc2FnZS9NZXNzYWdlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlL1N1cHBvcnRpbmdUeXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVzc2FnZXMvT3V0Ym91bmRNZXNzYWdlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2VPcGVuXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2VDbGlja1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVzc2FnZXMvSW5ib3VuZE1lc3NhZ2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21lc3NhZ2VzL01lc3NhZ2VGaWx0ZXJpbmdQYXJhbWV0ZXJzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90ZW1wbGF0ZXMvVGVtcGxhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NlcnZlci9TZXJ2ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NlcnZlci9TZXJ2ZXJzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zZXJ2ZXIvU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVyc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZG9tYWlucy9Eb21haW5cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NlbmRlcnMvU2lnbmF0dXJlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zdXBwcmVzc2lvbnMvU3VwcHJlc3Npb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0YXRzL1N0YXRzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zdGF0cy9TdGF0c0ZpbHRlcmluZ1BhcmFtZXRlcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyaWdnZXJzL0luYm91bmRSdWxlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93ZWJob29rcy9XZWJob29rc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2ViaG9va3MvV2ViaG9va1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2ViaG9va3MvV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dlYmhvb2tzL3BheWxvYWQvQm91bmNlV2ViaG9va1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2ViaG9va3MvcGF5bG9hZC9EZWxpdmVyeVdlYmhvb2tcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dlYmhvb2tzL3BheWxvYWQvQ2xpY2tXZWJob29rXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93ZWJob29rcy9wYXlsb2FkL09wZW5XZWJob29rXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93ZWJob29rcy9wYXlsb2FkL1N1YnNjcmlwdGlvbkNoYW5nZVdlYmhvb2tcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dlYmhvb2tzL3BheWxvYWQvSW5ib3VuZFdlYmhvb2tcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N1cHByZXNzaW9ucy9TdXBwcmVzc2lvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3RyZWFtcy9NZXNzYWdlU3RyZWFtXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zdHJlYW1zL01lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVyc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGF0YV9yZW1vdmFsL0RhdGFSZW1vdmFsc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/message/Message.js":
/*!*********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/message/Message.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Message = void 0;\nvar Message = /** @class */ function() {\n    function Message(From, Subject, HtmlBody, TextBody, To, Cc, Bcc, ReplyTo, Tag, TrackOpens, TrackLinks, Headers, Attachments, Metadata) {\n        this.From = From;\n        this.To = To;\n        this.Cc = Cc;\n        this.Bcc = Bcc;\n        this.Subject = Subject;\n        this.ReplyTo = ReplyTo;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.Tag = Tag;\n        this.TrackOpens = TrackOpens;\n        this.TrackLinks = TrackLinks;\n        this.Headers = Headers;\n        this.Attachments = Attachments;\n        this.Metadata = Metadata;\n    }\n    return Message;\n}();\nexports.Message = Message; //# sourceMappingURL=Message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2UvTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUUsVUFBVSxXQUFXLEdBQUk7SUFDekIsU0FBU0EsUUFBUUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLEdBQUcsRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxRQUFRO1FBQ2pJLElBQUksQ0FBQ2IsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0ksRUFBRSxHQUFHQTtRQUNWLElBQUksQ0FBQ0MsRUFBRSxHQUFHQTtRQUNWLElBQUksQ0FBQ0MsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0wsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ00sT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0wsUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDSyxHQUFHLEdBQUdBO1FBQ1gsSUFBSSxDQUFDQyxVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUNDLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLFdBQVcsR0FBR0E7UUFDbkIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO0lBQ3BCO0lBQ0EsT0FBT2Q7QUFDWDtBQUNBRixlQUFlLEdBQUdFLFNBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvbWVzc2FnZS9NZXNzYWdlLmpzPzg0ZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lc3NhZ2UgPSB2b2lkIDA7XG52YXIgTWVzc2FnZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNZXNzYWdlKEZyb20sIFN1YmplY3QsIEh0bWxCb2R5LCBUZXh0Qm9keSwgVG8sIENjLCBCY2MsIFJlcGx5VG8sIFRhZywgVHJhY2tPcGVucywgVHJhY2tMaW5rcywgSGVhZGVycywgQXR0YWNobWVudHMsIE1ldGFkYXRhKSB7XG4gICAgICAgIHRoaXMuRnJvbSA9IEZyb207XG4gICAgICAgIHRoaXMuVG8gPSBUbztcbiAgICAgICAgdGhpcy5DYyA9IENjO1xuICAgICAgICB0aGlzLkJjYyA9IEJjYztcbiAgICAgICAgdGhpcy5TdWJqZWN0ID0gU3ViamVjdDtcbiAgICAgICAgdGhpcy5SZXBseVRvID0gUmVwbHlUbztcbiAgICAgICAgdGhpcy5IdG1sQm9keSA9IEh0bWxCb2R5O1xuICAgICAgICB0aGlzLlRleHRCb2R5ID0gVGV4dEJvZHk7XG4gICAgICAgIHRoaXMuVGFnID0gVGFnO1xuICAgICAgICB0aGlzLlRyYWNrT3BlbnMgPSBUcmFja09wZW5zO1xuICAgICAgICB0aGlzLlRyYWNrTGlua3MgPSBUcmFja0xpbmtzO1xuICAgICAgICB0aGlzLkhlYWRlcnMgPSBIZWFkZXJzO1xuICAgICAgICB0aGlzLkF0dGFjaG1lbnRzID0gQXR0YWNobWVudHM7XG4gICAgICAgIHRoaXMuTWV0YWRhdGEgPSBNZXRhZGF0YTtcbiAgICB9XG4gICAgcmV0dXJuIE1lc3NhZ2U7XG59KCkpO1xuZXhwb3J0cy5NZXNzYWdlID0gTWVzc2FnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTWVzc2FnZSIsIkZyb20iLCJTdWJqZWN0IiwiSHRtbEJvZHkiLCJUZXh0Qm9keSIsIlRvIiwiQ2MiLCJCY2MiLCJSZXBseVRvIiwiVGFnIiwiVHJhY2tPcGVucyIsIlRyYWNrTGlua3MiLCJIZWFkZXJzIiwiQXR0YWNobWVudHMiLCJNZXRhZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/message/Message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/message/SupportingTypes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/message/SupportingTypes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Attachment = exports.Header = exports.ServerDeliveryTypes = exports.LinkClickLocation = exports.LinkTrackingOptions = void 0;\nvar LinkTrackingOptions;\n(function(LinkTrackingOptions) {\n    LinkTrackingOptions[\"TextOnly\"] = \"TextOnly\";\n    LinkTrackingOptions[\"HtmlOnly\"] = \"HtmlOnly\";\n    LinkTrackingOptions[\"HtmlAndText\"] = \"HtmlAndText\";\n    LinkTrackingOptions[\"None\"] = \"None\";\n})(LinkTrackingOptions = exports.LinkTrackingOptions || (exports.LinkTrackingOptions = {}));\nvar LinkClickLocation;\n(function(LinkClickLocation) {\n    LinkClickLocation[\"HTML\"] = \"HTML\";\n    LinkClickLocation[\"Text\"] = \"Text\";\n})(LinkClickLocation = exports.LinkClickLocation || (exports.LinkClickLocation = {}));\nvar ServerDeliveryTypes;\n(function(ServerDeliveryTypes) {\n    ServerDeliveryTypes[\"Live\"] = \"Live\";\n    ServerDeliveryTypes[\"Sandbox\"] = \"Sandbox\";\n})(ServerDeliveryTypes = exports.ServerDeliveryTypes || (exports.ServerDeliveryTypes = {}));\nvar Header = /** @class */ function() {\n    function Header(Name, Value) {\n        this.Name = Name;\n        this.Value = Value;\n    }\n    return Header;\n}();\nexports.Header = Header;\n/**\n * Attachment content\n *\n * @param Name - name of the attachment, for example book.pdf\n * @param Content - Base64 encoded content, for example: fs.readFileSync('/Folder/book.pdf').toString('base64')\n * @param ContentID - id of the attachment, in case we are referencing it, for example: cid:123book.pdf\n * @param ContentType - content type (json, image, etc)\n * @param ContentLength - length of the message\n */ var Attachment = /** @class */ function() {\n    function Attachment(Name, Content, ContentType, ContentID, ContentLength) {\n        if (ContentID === void 0) {\n            ContentID = null;\n        }\n        this.Name = Name;\n        this.Content = Content;\n        this.ContentType = ContentType;\n        this.ContentID = ContentID;\n        this.ContentLength = ContentLength;\n    }\n    return Attachment;\n}();\nexports.Attachment = Attachment; //# sourceMappingURL=SupportingTypes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2UvU3VwcG9ydGluZ1R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0IsR0FBR0EsY0FBYyxHQUFHQSwyQkFBMkIsR0FBR0EseUJBQXlCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDbkksSUFBSU07QUFDSCxVQUFVQSxtQkFBbUI7SUFDMUJBLG1CQUFtQixDQUFDLFdBQVcsR0FBRztJQUNsQ0EsbUJBQW1CLENBQUMsV0FBVyxHQUFHO0lBQ2xDQSxtQkFBbUIsQ0FBQyxjQUFjLEdBQUc7SUFDckNBLG1CQUFtQixDQUFDLE9BQU8sR0FBRztBQUNsQyxHQUFHQSxzQkFBc0JOLFFBQVFNLG1CQUFtQixJQUFLTixDQUFBQSwyQkFBMkIsR0FBRyxDQUFDO0FBQ3hGLElBQUlLO0FBQ0gsVUFBVUEsaUJBQWlCO0lBQ3hCQSxpQkFBaUIsQ0FBQyxPQUFPLEdBQUc7SUFDNUJBLGlCQUFpQixDQUFDLE9BQU8sR0FBRztBQUNoQyxHQUFHQSxvQkFBb0JMLFFBQVFLLGlCQUFpQixJQUFLTCxDQUFBQSx5QkFBeUIsR0FBRyxDQUFDO0FBQ2xGLElBQUlJO0FBQ0gsVUFBVUEsbUJBQW1CO0lBQzFCQSxtQkFBbUIsQ0FBQyxPQUFPLEdBQUc7SUFDOUJBLG1CQUFtQixDQUFDLFVBQVUsR0FBRztBQUNyQyxHQUFHQSxzQkFBc0JKLFFBQVFJLG1CQUFtQixJQUFLSixDQUFBQSwyQkFBMkIsR0FBRyxDQUFDO0FBQ3hGLElBQUlHLFNBQVMsV0FBVyxHQUFJO0lBQ3hCLFNBQVNBLE9BQU9JLElBQUksRUFBRUMsS0FBSztRQUN2QixJQUFJLENBQUNELElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLEtBQUssR0FBR0E7SUFDakI7SUFDQSxPQUFPTDtBQUNYO0FBQ0FILGNBQWMsR0FBR0c7QUFDakI7Ozs7Ozs7O0NBUUMsR0FDRCxJQUFJRCxhQUFhLFdBQVcsR0FBSTtJQUM1QixTQUFTQSxXQUFXSyxJQUFJLEVBQUVFLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxTQUFTLEVBQUVDLGFBQWE7UUFDcEUsSUFBSUQsY0FBYyxLQUFLLEdBQUc7WUFBRUEsWUFBWTtRQUFNO1FBQzlDLElBQUksQ0FBQ0osSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0UsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO0lBQ3pCO0lBQ0EsT0FBT1Y7QUFDWDtBQUNBRixrQkFBa0IsR0FBR0UsWUFDckIsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlL1N1cHBvcnRpbmdUeXBlcy5qcz9kMWJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdHRhY2htZW50ID0gZXhwb3J0cy5IZWFkZXIgPSBleHBvcnRzLlNlcnZlckRlbGl2ZXJ5VHlwZXMgPSBleHBvcnRzLkxpbmtDbGlja0xvY2F0aW9uID0gZXhwb3J0cy5MaW5rVHJhY2tpbmdPcHRpb25zID0gdm9pZCAwO1xudmFyIExpbmtUcmFja2luZ09wdGlvbnM7XG4oZnVuY3Rpb24gKExpbmtUcmFja2luZ09wdGlvbnMpIHtcbiAgICBMaW5rVHJhY2tpbmdPcHRpb25zW1wiVGV4dE9ubHlcIl0gPSBcIlRleHRPbmx5XCI7XG4gICAgTGlua1RyYWNraW5nT3B0aW9uc1tcIkh0bWxPbmx5XCJdID0gXCJIdG1sT25seVwiO1xuICAgIExpbmtUcmFja2luZ09wdGlvbnNbXCJIdG1sQW5kVGV4dFwiXSA9IFwiSHRtbEFuZFRleHRcIjtcbiAgICBMaW5rVHJhY2tpbmdPcHRpb25zW1wiTm9uZVwiXSA9IFwiTm9uZVwiO1xufSkoTGlua1RyYWNraW5nT3B0aW9ucyA9IGV4cG9ydHMuTGlua1RyYWNraW5nT3B0aW9ucyB8fCAoZXhwb3J0cy5MaW5rVHJhY2tpbmdPcHRpb25zID0ge30pKTtcbnZhciBMaW5rQ2xpY2tMb2NhdGlvbjtcbihmdW5jdGlvbiAoTGlua0NsaWNrTG9jYXRpb24pIHtcbiAgICBMaW5rQ2xpY2tMb2NhdGlvbltcIkhUTUxcIl0gPSBcIkhUTUxcIjtcbiAgICBMaW5rQ2xpY2tMb2NhdGlvbltcIlRleHRcIl0gPSBcIlRleHRcIjtcbn0pKExpbmtDbGlja0xvY2F0aW9uID0gZXhwb3J0cy5MaW5rQ2xpY2tMb2NhdGlvbiB8fCAoZXhwb3J0cy5MaW5rQ2xpY2tMb2NhdGlvbiA9IHt9KSk7XG52YXIgU2VydmVyRGVsaXZlcnlUeXBlcztcbihmdW5jdGlvbiAoU2VydmVyRGVsaXZlcnlUeXBlcykge1xuICAgIFNlcnZlckRlbGl2ZXJ5VHlwZXNbXCJMaXZlXCJdID0gXCJMaXZlXCI7XG4gICAgU2VydmVyRGVsaXZlcnlUeXBlc1tcIlNhbmRib3hcIl0gPSBcIlNhbmRib3hcIjtcbn0pKFNlcnZlckRlbGl2ZXJ5VHlwZXMgPSBleHBvcnRzLlNlcnZlckRlbGl2ZXJ5VHlwZXMgfHwgKGV4cG9ydHMuU2VydmVyRGVsaXZlcnlUeXBlcyA9IHt9KSk7XG52YXIgSGVhZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEhlYWRlcihOYW1lLCBWYWx1ZSkge1xuICAgICAgICB0aGlzLk5hbWUgPSBOYW1lO1xuICAgICAgICB0aGlzLlZhbHVlID0gVmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBIZWFkZXI7XG59KCkpO1xuZXhwb3J0cy5IZWFkZXIgPSBIZWFkZXI7XG4vKipcbiAqIEF0dGFjaG1lbnQgY29udGVudFxuICpcbiAqIEBwYXJhbSBOYW1lIC0gbmFtZSBvZiB0aGUgYXR0YWNobWVudCwgZm9yIGV4YW1wbGUgYm9vay5wZGZcbiAqIEBwYXJhbSBDb250ZW50IC0gQmFzZTY0IGVuY29kZWQgY29udGVudCwgZm9yIGV4YW1wbGU6IGZzLnJlYWRGaWxlU3luYygnL0ZvbGRlci9ib29rLnBkZicpLnRvU3RyaW5nKCdiYXNlNjQnKVxuICogQHBhcmFtIENvbnRlbnRJRCAtIGlkIG9mIHRoZSBhdHRhY2htZW50LCBpbiBjYXNlIHdlIGFyZSByZWZlcmVuY2luZyBpdCwgZm9yIGV4YW1wbGU6IGNpZDoxMjNib29rLnBkZlxuICogQHBhcmFtIENvbnRlbnRUeXBlIC0gY29udGVudCB0eXBlIChqc29uLCBpbWFnZSwgZXRjKVxuICogQHBhcmFtIENvbnRlbnRMZW5ndGggLSBsZW5ndGggb2YgdGhlIG1lc3NhZ2VcbiAqL1xudmFyIEF0dGFjaG1lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQXR0YWNobWVudChOYW1lLCBDb250ZW50LCBDb250ZW50VHlwZSwgQ29udGVudElELCBDb250ZW50TGVuZ3RoKSB7XG4gICAgICAgIGlmIChDb250ZW50SUQgPT09IHZvaWQgMCkgeyBDb250ZW50SUQgPSBudWxsOyB9XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuQ29udGVudCA9IENvbnRlbnQ7XG4gICAgICAgIHRoaXMuQ29udGVudFR5cGUgPSBDb250ZW50VHlwZTtcbiAgICAgICAgdGhpcy5Db250ZW50SUQgPSBDb250ZW50SUQ7XG4gICAgICAgIHRoaXMuQ29udGVudExlbmd0aCA9IENvbnRlbnRMZW5ndGg7XG4gICAgfVxuICAgIHJldHVybiBBdHRhY2htZW50O1xufSgpKTtcbmV4cG9ydHMuQXR0YWNobWVudCA9IEF0dGFjaG1lbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdXBwb3J0aW5nVHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQXR0YWNobWVudCIsIkhlYWRlciIsIlNlcnZlckRlbGl2ZXJ5VHlwZXMiLCJMaW5rQ2xpY2tMb2NhdGlvbiIsIkxpbmtUcmFja2luZ09wdGlvbnMiLCJOYW1lIiwiVmFsdWUiLCJDb250ZW50IiwiQ29udGVudFR5cGUiLCJDb250ZW50SUQiLCJDb250ZW50TGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/message/SupportingTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/InboundMessage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/InboundMessage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=InboundMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL0luYm91bmRNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvbWVzc2FnZXMvSW5ib3VuZE1lc3NhZ2UuanM/ZDQ2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluYm91bmRNZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/InboundMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OutboundMessageClicksFilteringParameters = exports.OutboundMessageOpensFilteringParameters = exports.OutboundMessageTrackingFilteringParameters = exports.InboundMessagesFilteringParameters = exports.OutboundMessagesFilteringParameters = exports.InboundMessageStatus = exports.OutboundMessageStatus = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar OutboundMessageStatus;\n(function(OutboundMessageStatus) {\n    OutboundMessageStatus[\"Queued\"] = \"queued\";\n    OutboundMessageStatus[\"Sent\"] = \"sent\";\n    OutboundMessageStatus[\"Processed\"] = \"processed\";\n})(OutboundMessageStatus = exports.OutboundMessageStatus || (exports.OutboundMessageStatus = {}));\nvar InboundMessageStatus;\n(function(InboundMessageStatus) {\n    InboundMessageStatus[\"Queued\"] = \"queued\";\n    InboundMessageStatus[\"Sent\"] = \"sent\";\n    InboundMessageStatus[\"Processed\"] = \"processed\";\n    InboundMessageStatus[\"Blocked\"] = \"blocked\";\n    InboundMessageStatus[\"Failed\"] = \"failed\";\n    InboundMessageStatus[\"Scheduled\"] = \"scheduled\";\n})(InboundMessageStatus = exports.InboundMessageStatus || (exports.InboundMessageStatus = {}));\n/**\n * Describes filtering parameters that can be used when retrieving outbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var OutboundMessagesFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessagesFilteringParameters, _super);\n    function OutboundMessagesFilteringParameters(count, offset, recipient, fromEmail, tag, status, fromDate, toDate, subject, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.recipient = recipient;\n        _this.fromEmail = fromEmail;\n        _this.tag = tag;\n        _this.status = status;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.subject = subject;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return OutboundMessagesFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.OutboundMessagesFilteringParameters = OutboundMessagesFilteringParameters;\n/**\n * Describes filtering parameters that can be used when retrieving inbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var InboundMessagesFilteringParameters = /** @class */ function(_super) {\n    __extends(InboundMessagesFilteringParameters, _super);\n    function InboundMessagesFilteringParameters(count, offset, mailboxHash, recipient, fromEmail, tag, status, fromDate, toDate, subject) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.status = status;\n        _this.mailboxHash = mailboxHash;\n        _this.recipient = recipient;\n        _this.fromEmail = fromEmail;\n        _this.tag = tag;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.subject = subject;\n        return _this;\n    }\n    return InboundMessagesFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.InboundMessagesFilteringParameters = InboundMessagesFilteringParameters;\n/**\n * Describes filtering parameters that can be used when retrieving tracked outbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var OutboundMessageTrackingFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageTrackingFilteringParameters, _super);\n    function OutboundMessageTrackingFilteringParameters(count, offset, recipient, tag, client_name, client_company, client_family, os_name, os_family, os_company, platform, country, region, city, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.recipient = recipient;\n        _this.tag = tag;\n        _this.client_name = client_name;\n        _this.client_company = client_company;\n        _this.client_family = client_family;\n        _this.os_name = os_name;\n        _this.os_family = os_family;\n        _this.os_company = os_company;\n        _this.platform = platform;\n        _this.country = country;\n        _this.region = region;\n        _this.city = city;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return OutboundMessageTrackingFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.OutboundMessageTrackingFilteringParameters = OutboundMessageTrackingFilteringParameters;\nvar OutboundMessageOpensFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageOpensFilteringParameters, _super);\n    function OutboundMessageOpensFilteringParameters() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OutboundMessageOpensFilteringParameters;\n}(OutboundMessageTrackingFilteringParameters);\nexports.OutboundMessageOpensFilteringParameters = OutboundMessageOpensFilteringParameters;\nvar OutboundMessageClicksFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageClicksFilteringParameters, _super);\n    function OutboundMessageClicksFilteringParameters() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OutboundMessageClicksFilteringParameters;\n}(OutboundMessageTrackingFilteringParameters);\nexports.OutboundMessageClicksFilteringParameters = OutboundMessageClicksFilteringParameters; //# sourceMappingURL=MessageFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL01lc3NhZ2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdEQUFnRCxHQUFHQSwrQ0FBK0MsR0FBR0Esa0RBQWtELEdBQUdBLDBDQUEwQyxHQUFHQSwyQ0FBMkMsR0FBR0EsNEJBQTRCLEdBQUdBLDZCQUE2QixHQUFHLEtBQUs7QUFDelQsSUFBSVMsd0JBQXdCQyxtQkFBT0EsQ0FBQyxxSEFBK0I7QUFDbkUsSUFBSUY7QUFDSCxVQUFVQSxxQkFBcUI7SUFDNUJBLHFCQUFxQixDQUFDLFNBQVMsR0FBRztJQUNsQ0EscUJBQXFCLENBQUMsT0FBTyxHQUFHO0lBQ2hDQSxxQkFBcUIsQ0FBQyxZQUFZLEdBQUc7QUFDekMsR0FBR0Esd0JBQXdCUixRQUFRUSxxQkFBcUIsSUFBS1IsQ0FBQUEsNkJBQTZCLEdBQUcsQ0FBQztBQUM5RixJQUFJTztBQUNILFVBQVVBLG9CQUFvQjtJQUMzQkEsb0JBQW9CLENBQUMsU0FBUyxHQUFHO0lBQ2pDQSxvQkFBb0IsQ0FBQyxPQUFPLEdBQUc7SUFDL0JBLG9CQUFvQixDQUFDLFlBQVksR0FBRztJQUNwQ0Esb0JBQW9CLENBQUMsVUFBVSxHQUFHO0lBQ2xDQSxvQkFBb0IsQ0FBQyxTQUFTLEdBQUc7SUFDakNBLG9CQUFvQixDQUFDLFlBQVksR0FBRztBQUN4QyxHQUFHQSx1QkFBdUJQLFFBQVFPLG9CQUFvQixJQUFLUCxDQUFBQSw0QkFBNEIsR0FBRyxDQUFDO0FBQzNGOzs7Q0FHQyxHQUNELElBQUlNLHNDQUFzQyxXQUFXLEdBQUksU0FBVUssTUFBTTtJQUNyRTdCLFVBQVV3QixxQ0FBcUNLO0lBQy9DLFNBQVNMLG9DQUFvQ00sS0FBSyxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsYUFBYTtRQUNuSSxJQUFJVCxVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlTLFFBQVFYLE9BQU9sQixJQUFJLENBQUMsSUFBSSxFQUFFbUIsT0FBT0MsV0FBVyxJQUFJO1FBQ3BEUyxNQUFNUixTQUFTLEdBQUdBO1FBQ2xCUSxNQUFNUCxTQUFTLEdBQUdBO1FBQ2xCTyxNQUFNTixHQUFHLEdBQUdBO1FBQ1pNLE1BQU1MLE1BQU0sR0FBR0E7UUFDZkssTUFBTUosUUFBUSxHQUFHQTtRQUNqQkksTUFBTUgsTUFBTSxHQUFHQTtRQUNmRyxNQUFNRixPQUFPLEdBQUdBO1FBQ2hCRSxNQUFNRCxhQUFhLEdBQUdBO1FBQ3RCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPaEI7QUFDWCxFQUFFRyxzQkFBc0JjLG1CQUFtQjtBQUMzQ3ZCLDJDQUEyQyxHQUFHTTtBQUM5Qzs7O0NBR0MsR0FDRCxJQUFJRCxxQ0FBcUMsV0FBVyxHQUFJLFNBQVVNLE1BQU07SUFDcEU3QixVQUFVdUIsb0NBQW9DTTtJQUM5QyxTQUFTTixtQ0FBbUNPLEtBQUssRUFBRUMsTUFBTSxFQUFFVyxXQUFXLEVBQUVWLFNBQVMsRUFBRUMsU0FBUyxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU87UUFDaEksSUFBSVIsVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJUyxRQUFRWCxPQUFPbEIsSUFBSSxDQUFDLElBQUksRUFBRW1CLE9BQU9DLFdBQVcsSUFBSTtRQUNwRFMsTUFBTUwsTUFBTSxHQUFHQTtRQUNmSyxNQUFNRSxXQUFXLEdBQUdBO1FBQ3BCRixNQUFNUixTQUFTLEdBQUdBO1FBQ2xCUSxNQUFNUCxTQUFTLEdBQUdBO1FBQ2xCTyxNQUFNTixHQUFHLEdBQUdBO1FBQ1pNLE1BQU1KLFFBQVEsR0FBR0E7UUFDakJJLE1BQU1ILE1BQU0sR0FBR0E7UUFDZkcsTUFBTUYsT0FBTyxHQUFHQTtRQUNoQixPQUFPRTtJQUNYO0lBQ0EsT0FBT2pCO0FBQ1gsRUFBRUksc0JBQXNCYyxtQkFBbUI7QUFDM0N2QiwwQ0FBMEMsR0FBR0s7QUFDN0M7OztDQUdDLEdBQ0QsSUFBSUQsNkNBQTZDLFdBQVcsR0FBSSxTQUFVTyxNQUFNO0lBQzVFN0IsVUFBVXNCLDRDQUE0Q087SUFDdEQsU0FBU1AsMkNBQTJDUSxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsU0FBUyxFQUFFRSxHQUFHLEVBQUVTLFdBQVcsRUFBRUMsY0FBYyxFQUFFQyxhQUFhLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFQyxVQUFVLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRWIsYUFBYTtRQUN6TSxJQUFJVCxVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlTLFFBQVFYLE9BQU9sQixJQUFJLENBQUMsSUFBSSxFQUFFbUIsT0FBT0MsV0FBVyxJQUFJO1FBQ3BEUyxNQUFNUixTQUFTLEdBQUdBO1FBQ2xCUSxNQUFNTixHQUFHLEdBQUdBO1FBQ1pNLE1BQU1HLFdBQVcsR0FBR0E7UUFDcEJILE1BQU1JLGNBQWMsR0FBR0E7UUFDdkJKLE1BQU1LLGFBQWEsR0FBR0E7UUFDdEJMLE1BQU1NLE9BQU8sR0FBR0E7UUFDaEJOLE1BQU1PLFNBQVMsR0FBR0E7UUFDbEJQLE1BQU1RLFVBQVUsR0FBR0E7UUFDbkJSLE1BQU1TLFFBQVEsR0FBR0E7UUFDakJULE1BQU1VLE9BQU8sR0FBR0E7UUFDaEJWLE1BQU1XLE1BQU0sR0FBR0E7UUFDZlgsTUFBTVksSUFBSSxHQUFHQTtRQUNiWixNQUFNRCxhQUFhLEdBQUdBO1FBQ3RCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPbEI7QUFDWCxFQUFFSyxzQkFBc0JjLG1CQUFtQjtBQUMzQ3ZCLGtEQUFrRCxHQUFHSTtBQUNyRCxJQUFJRCwwQ0FBMEMsV0FBVyxHQUFJLFNBQVVRLE1BQU07SUFDekU3QixVQUFVcUIseUNBQXlDUTtJQUNuRCxTQUFTUjtRQUNMLE9BQU9RLFdBQVcsUUFBUUEsT0FBT3dCLEtBQUssQ0FBQyxJQUFJLEVBQUVDLGNBQWMsSUFBSTtJQUNuRTtJQUNBLE9BQU9qQztBQUNYLEVBQUVDO0FBQ0ZKLCtDQUErQyxHQUFHRztBQUNsRCxJQUFJRCwyQ0FBMkMsV0FBVyxHQUFJLFNBQVVTLE1BQU07SUFDMUU3QixVQUFVb0IsMENBQTBDUztJQUNwRCxTQUFTVDtRQUNMLE9BQU9TLFdBQVcsUUFBUUEsT0FBT3dCLEtBQUssQ0FBQyxJQUFJLEVBQUVDLGNBQWMsSUFBSTtJQUNuRTtJQUNBLE9BQU9sQztBQUNYLEVBQUVFO0FBQ0ZKLGdEQUFnRCxHQUFHRSwwQ0FDbkQsc0RBQXNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9NZXNzYWdlRmlsdGVyaW5nUGFyYW1ldGVycy5qcz81NGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlQ2xpY2tzRmlsdGVyaW5nUGFyYW1ldGVycyA9IGV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlT3BlbnNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBleHBvcnRzLkluYm91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBleHBvcnRzLk91dGJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gZXhwb3J0cy5JbmJvdW5kTWVzc2FnZVN0YXR1cyA9IGV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlU3RhdHVzID0gdm9pZCAwO1xudmFyIEZpbHRlcmluZ1BhcmFtZXRlcnNfMSA9IHJlcXVpcmUoXCIuLi9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVyc1wiKTtcbnZhciBPdXRib3VuZE1lc3NhZ2VTdGF0dXM7XG4oZnVuY3Rpb24gKE91dGJvdW5kTWVzc2FnZVN0YXR1cykge1xuICAgIE91dGJvdW5kTWVzc2FnZVN0YXR1c1tcIlF1ZXVlZFwiXSA9IFwicXVldWVkXCI7XG4gICAgT3V0Ym91bmRNZXNzYWdlU3RhdHVzW1wiU2VudFwiXSA9IFwic2VudFwiO1xuICAgIE91dGJvdW5kTWVzc2FnZVN0YXR1c1tcIlByb2Nlc3NlZFwiXSA9IFwicHJvY2Vzc2VkXCI7XG59KShPdXRib3VuZE1lc3NhZ2VTdGF0dXMgPSBleHBvcnRzLk91dGJvdW5kTWVzc2FnZVN0YXR1cyB8fCAoZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VTdGF0dXMgPSB7fSkpO1xudmFyIEluYm91bmRNZXNzYWdlU3RhdHVzO1xuKGZ1bmN0aW9uIChJbmJvdW5kTWVzc2FnZVN0YXR1cykge1xuICAgIEluYm91bmRNZXNzYWdlU3RhdHVzW1wiUXVldWVkXCJdID0gXCJxdWV1ZWRcIjtcbiAgICBJbmJvdW5kTWVzc2FnZVN0YXR1c1tcIlNlbnRcIl0gPSBcInNlbnRcIjtcbiAgICBJbmJvdW5kTWVzc2FnZVN0YXR1c1tcIlByb2Nlc3NlZFwiXSA9IFwicHJvY2Vzc2VkXCI7XG4gICAgSW5ib3VuZE1lc3NhZ2VTdGF0dXNbXCJCbG9ja2VkXCJdID0gXCJibG9ja2VkXCI7XG4gICAgSW5ib3VuZE1lc3NhZ2VTdGF0dXNbXCJGYWlsZWRcIl0gPSBcImZhaWxlZFwiO1xuICAgIEluYm91bmRNZXNzYWdlU3RhdHVzW1wiU2NoZWR1bGVkXCJdID0gXCJzY2hlZHVsZWRcIjtcbn0pKEluYm91bmRNZXNzYWdlU3RhdHVzID0gZXhwb3J0cy5JbmJvdW5kTWVzc2FnZVN0YXR1cyB8fCAoZXhwb3J0cy5JbmJvdW5kTWVzc2FnZVN0YXR1cyA9IHt9KSk7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyBvdXRib3VuZCBtZXNzYWdlcy5cbiAqIFdoZW4gcGFnaW5hdGlvbiBwYXJhbWV0ZXJzIGFyZSBub3Qgc3BlY2lmaWVkLCBkZWZhdWx0IHZhbHVlcyBhcmUgc2V0LlxuICovXG52YXIgT3V0Ym91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE91dGJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE91dGJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzKGNvdW50LCBvZmZzZXQsIHJlY2lwaWVudCwgZnJvbUVtYWlsLCB0YWcsIHN0YXR1cywgZnJvbURhdGUsIHRvRGF0ZSwgc3ViamVjdCwgbWVzc2FnZVN0cmVhbSkge1xuICAgICAgICBpZiAoY291bnQgPT09IHZvaWQgMCkgeyBjb3VudCA9IDEwMDsgfVxuICAgICAgICBpZiAob2Zmc2V0ID09PSB2b2lkIDApIHsgb2Zmc2V0ID0gMDsgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjb3VudCwgb2Zmc2V0KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5yZWNpcGllbnQgPSByZWNpcGllbnQ7XG4gICAgICAgIF90aGlzLmZyb21FbWFpbCA9IGZyb21FbWFpbDtcbiAgICAgICAgX3RoaXMudGFnID0gdGFnO1xuICAgICAgICBfdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICAgIF90aGlzLmZyb21EYXRlID0gZnJvbURhdGU7XG4gICAgICAgIF90aGlzLnRvRGF0ZSA9IHRvRGF0ZTtcbiAgICAgICAgX3RoaXMuc3ViamVjdCA9IHN1YmplY3Q7XG4gICAgICAgIF90aGlzLm1lc3NhZ2VTdHJlYW0gPSBtZXNzYWdlU3RyZWFtO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBPdXRib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oRmlsdGVyaW5nUGFyYW1ldGVyc18xLkZpbHRlcmluZ1BhcmFtZXRlcnMpKTtcbmV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBPdXRib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycztcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIGluYm91bmQgbWVzc2FnZXMuXG4gKiBXaGVuIHBhZ2luYXRpb24gcGFyYW1ldGVycyBhcmUgbm90IHNwZWNpZmllZCwgZGVmYXVsdCB2YWx1ZXMgYXJlIHNldC5cbiAqL1xudmFyIEluYm91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEluYm91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyhjb3VudCwgb2Zmc2V0LCBtYWlsYm94SGFzaCwgcmVjaXBpZW50LCBmcm9tRW1haWwsIHRhZywgc3RhdHVzLCBmcm9tRGF0ZSwgdG9EYXRlLCBzdWJqZWN0KSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvdW50LCBvZmZzZXQpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgX3RoaXMubWFpbGJveEhhc2ggPSBtYWlsYm94SGFzaDtcbiAgICAgICAgX3RoaXMucmVjaXBpZW50ID0gcmVjaXBpZW50O1xuICAgICAgICBfdGhpcy5mcm9tRW1haWwgPSBmcm9tRW1haWw7XG4gICAgICAgIF90aGlzLnRhZyA9IHRhZztcbiAgICAgICAgX3RoaXMuZnJvbURhdGUgPSBmcm9tRGF0ZTtcbiAgICAgICAgX3RoaXMudG9EYXRlID0gdG9EYXRlO1xuICAgICAgICBfdGhpcy5zdWJqZWN0ID0gc3ViamVjdDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oRmlsdGVyaW5nUGFyYW1ldGVyc18xLkZpbHRlcmluZ1BhcmFtZXRlcnMpKTtcbmV4cG9ydHMuSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyA9IEluYm91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyB0cmFja2VkIG91dGJvdW5kIG1lc3NhZ2VzLlxuICogV2hlbiBwYWdpbmF0aW9uIHBhcmFtZXRlcnMgYXJlIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgdmFsdWVzIGFyZSBzZXQuXG4gKi9cbnZhciBPdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBPdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnMoY291bnQsIG9mZnNldCwgcmVjaXBpZW50LCB0YWcsIGNsaWVudF9uYW1lLCBjbGllbnRfY29tcGFueSwgY2xpZW50X2ZhbWlseSwgb3NfbmFtZSwgb3NfZmFtaWx5LCBvc19jb21wYW55LCBwbGF0Zm9ybSwgY291bnRyeSwgcmVnaW9uLCBjaXR5LCBtZXNzYWdlU3RyZWFtKSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvdW50LCBvZmZzZXQpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnJlY2lwaWVudCA9IHJlY2lwaWVudDtcbiAgICAgICAgX3RoaXMudGFnID0gdGFnO1xuICAgICAgICBfdGhpcy5jbGllbnRfbmFtZSA9IGNsaWVudF9uYW1lO1xuICAgICAgICBfdGhpcy5jbGllbnRfY29tcGFueSA9IGNsaWVudF9jb21wYW55O1xuICAgICAgICBfdGhpcy5jbGllbnRfZmFtaWx5ID0gY2xpZW50X2ZhbWlseTtcbiAgICAgICAgX3RoaXMub3NfbmFtZSA9IG9zX25hbWU7XG4gICAgICAgIF90aGlzLm9zX2ZhbWlseSA9IG9zX2ZhbWlseTtcbiAgICAgICAgX3RoaXMub3NfY29tcGFueSA9IG9zX2NvbXBhbnk7XG4gICAgICAgIF90aGlzLnBsYXRmb3JtID0gcGxhdGZvcm07XG4gICAgICAgIF90aGlzLmNvdW50cnkgPSBjb3VudHJ5O1xuICAgICAgICBfdGhpcy5yZWdpb24gPSByZWdpb247XG4gICAgICAgIF90aGlzLmNpdHkgPSBjaXR5O1xuICAgICAgICBfdGhpcy5tZXNzYWdlU3RyZWFtID0gbWVzc2FnZVN0cmVhbTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gT3V0Ym91bmRNZXNzYWdlVHJhY2tpbmdGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufShGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEuRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBPdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG52YXIgT3V0Ym91bmRNZXNzYWdlT3BlbnNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhPdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gT3V0Ym91bmRNZXNzYWdlT3BlbnNGaWx0ZXJpbmdQYXJhbWV0ZXJzKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBPdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KE91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBPdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG52YXIgT3V0Ym91bmRNZXNzYWdlQ2xpY2tzRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoT3V0Ym91bmRNZXNzYWdlQ2xpY2tzRmlsdGVyaW5nUGFyYW1ldGVycywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBPdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBPdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufShPdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnMpKTtcbmV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlQ2xpY2tzRmlsdGVyaW5nUGFyYW1ldGVycyA9IE91dGJvdW5kTWVzc2FnZUNsaWNrc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXNzYWdlRmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJPdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiT3V0Ym91bmRNZXNzYWdlT3BlbnNGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiT3V0Ym91bmRNZXNzYWdlVHJhY2tpbmdGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyIsIk91dGJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiSW5ib3VuZE1lc3NhZ2VTdGF0dXMiLCJPdXRib3VuZE1lc3NhZ2VTdGF0dXMiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEiLCJyZXF1aXJlIiwiX3N1cGVyIiwiY291bnQiLCJvZmZzZXQiLCJyZWNpcGllbnQiLCJmcm9tRW1haWwiLCJ0YWciLCJzdGF0dXMiLCJmcm9tRGF0ZSIsInRvRGF0ZSIsInN1YmplY3QiLCJtZXNzYWdlU3RyZWFtIiwiX3RoaXMiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwibWFpbGJveEhhc2giLCJjbGllbnRfbmFtZSIsImNsaWVudF9jb21wYW55IiwiY2xpZW50X2ZhbWlseSIsIm9zX25hbWUiLCJvc19mYW1pbHkiLCJvc19jb21wYW55IiwicGxhdGZvcm0iLCJjb3VudHJ5IiwicmVnaW9uIiwiY2l0eSIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessage.js":
/*!******************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/OutboundMessage.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZS5qcz9jNjc1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3V0Ym91bmRNZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessageClick.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZUNsaWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvbWVzc2FnZXMvT3V0Ym91bmRNZXNzYWdlQ2xpY2suanM/MGRjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU91dGJvdW5kTWVzc2FnZUNsaWNrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessageOpen.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZU9wZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2VPcGVuLmpzPzcxYzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PdXRib3VuZE1lc3NhZ2VPcGVuLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/senders/Signature.js":
/*!***********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/senders/Signature.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateSignatureRequest = exports.UpdateSignatureRequest = void 0;\nvar UpdateSignatureRequest = /** @class */ function() {\n    function UpdateSignatureRequest(Name, ReplyToEmail, ReturnPathDomain, ConfirmationPersonalNote) {\n        this.Name = Name;\n        this.ReplyToEmail = ReplyToEmail;\n        this.ReturnPathDomain = ReturnPathDomain;\n        this.ConfirmationPersonalNote = ConfirmationPersonalNote;\n    }\n    return UpdateSignatureRequest;\n}();\nexports.UpdateSignatureRequest = UpdateSignatureRequest;\nvar CreateSignatureRequest = /** @class */ function() {\n    function CreateSignatureRequest(Name, FromEmail, ReplyToEmail, ReturnPathDomain, ConfirmationPersonalNote) {\n        this.Name = Name;\n        this.ReplyToEmail = ReplyToEmail;\n        this.ReturnPathDomain = ReturnPathDomain;\n        this.FromEmail = FromEmail;\n        this.ConfirmationPersonalNote = ConfirmationPersonalNote;\n    }\n    return CreateSignatureRequest;\n}();\nexports.CreateSignatureRequest = CreateSignatureRequest; //# sourceMappingURL=Signature.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlbmRlcnMvU2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw4QkFBOEIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUN2RSxJQUFJRyx5QkFBeUIsV0FBVyxHQUFJO0lBQ3hDLFNBQVNBLHVCQUF1QkMsSUFBSSxFQUFFQyxZQUFZLEVBQUVDLGdCQUFnQixFQUFFQyx3QkFBd0I7UUFDMUYsSUFBSSxDQUFDSCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0Msd0JBQXdCLEdBQUdBO0lBQ3BDO0lBQ0EsT0FBT0o7QUFDWDtBQUNBSCw4QkFBOEIsR0FBR0c7QUFDakMsSUFBSUQseUJBQXlCLFdBQVcsR0FBSTtJQUN4QyxTQUFTQSx1QkFBdUJFLElBQUksRUFBRUksU0FBUyxFQUFFSCxZQUFZLEVBQUVDLGdCQUFnQixFQUFFQyx3QkFBd0I7UUFDckcsSUFBSSxDQUFDSCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0UsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNELHdCQUF3QixHQUFHQTtJQUNwQztJQUNBLE9BQU9MO0FBQ1g7QUFDQUYsOEJBQThCLEdBQUdFLHdCQUNqQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlbmRlcnMvU2lnbmF0dXJlLmpzPzM1MTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVNpZ25hdHVyZVJlcXVlc3QgPSBleHBvcnRzLlVwZGF0ZVNpZ25hdHVyZVJlcXVlc3QgPSB2b2lkIDA7XG52YXIgVXBkYXRlU2lnbmF0dXJlUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBVcGRhdGVTaWduYXR1cmVSZXF1ZXN0KE5hbWUsIFJlcGx5VG9FbWFpbCwgUmV0dXJuUGF0aERvbWFpbiwgQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuUmVwbHlUb0VtYWlsID0gUmVwbHlUb0VtYWlsO1xuICAgICAgICB0aGlzLlJldHVyblBhdGhEb21haW4gPSBSZXR1cm5QYXRoRG9tYWluO1xuICAgICAgICB0aGlzLkNvbmZpcm1hdGlvblBlcnNvbmFsTm90ZSA9IENvbmZpcm1hdGlvblBlcnNvbmFsTm90ZTtcbiAgICB9XG4gICAgcmV0dXJuIFVwZGF0ZVNpZ25hdHVyZVJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5VcGRhdGVTaWduYXR1cmVSZXF1ZXN0ID0gVXBkYXRlU2lnbmF0dXJlUmVxdWVzdDtcbnZhciBDcmVhdGVTaWduYXR1cmVSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENyZWF0ZVNpZ25hdHVyZVJlcXVlc3QoTmFtZSwgRnJvbUVtYWlsLCBSZXBseVRvRW1haWwsIFJldHVyblBhdGhEb21haW4sIENvbmZpcm1hdGlvblBlcnNvbmFsTm90ZSkge1xuICAgICAgICB0aGlzLk5hbWUgPSBOYW1lO1xuICAgICAgICB0aGlzLlJlcGx5VG9FbWFpbCA9IFJlcGx5VG9FbWFpbDtcbiAgICAgICAgdGhpcy5SZXR1cm5QYXRoRG9tYWluID0gUmV0dXJuUGF0aERvbWFpbjtcbiAgICAgICAgdGhpcy5Gcm9tRW1haWwgPSBGcm9tRW1haWw7XG4gICAgICAgIHRoaXMuQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlID0gQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlO1xuICAgIH1cbiAgICByZXR1cm4gQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLkNyZWF0ZVNpZ25hdHVyZVJlcXVlc3QgPSBDcmVhdGVTaWduYXR1cmVSZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVNpZ25hdHVyZVJlcXVlc3QiLCJVcGRhdGVTaWduYXR1cmVSZXF1ZXN0IiwiTmFtZSIsIlJlcGx5VG9FbWFpbCIsIlJldHVyblBhdGhEb21haW4iLCJDb25maXJtYXRpb25QZXJzb25hbE5vdGUiLCJGcm9tRW1haWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/senders/Signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/server/Server.js":
/*!*******************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/server/Server.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateServerRequest = exports.UpdateServerRequest = void 0;\nvar UpdateServerRequest = /** @class */ function() {\n    function UpdateServerRequest(Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain) {\n        this.Name = Name;\n        this.Color = Color;\n        this.SmtpApiActivated = SmtpApiActivated;\n        this.RawEmailEnabled = RawEmailEnabled;\n        this.InboundHookUrl = InboundHookUrl;\n        this.BounceHookUrl = BounceHookUrl;\n        this.OpenHookUrl = OpenHookUrl;\n        this.DeliveryHookUrl = DeliveryHookUrl;\n        this.ClickHookUrl = ClickHookUrl;\n        this.PostFirstOpenOnly = PostFirstOpenOnly;\n        this.InboundSpamThreshold = InboundSpamThreshold;\n        this.InboundDomain = InboundDomain;\n        this.TrackOpens = TrackOpens;\n        this.TrackLinks = TrackLinks;\n        this.IncludeBounceContentInHook = IncludeBounceContentInHook;\n        this.EnableSmtpApiErrorHooks = EnableSmtpApiErrorHooks;\n    }\n    return UpdateServerRequest;\n}();\nexports.UpdateServerRequest = UpdateServerRequest;\nvar CreateServerRequest = /** @class */ function(_super) {\n    __extends(CreateServerRequest, _super);\n    function CreateServerRequest(Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain, DeliveryType) {\n        var _this = _super.call(this, Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain) || this;\n        _this.DeliveryType = DeliveryType;\n        return _this;\n    }\n    return CreateServerRequest;\n}(UpdateServerRequest);\nexports.CreateServerRequest = CreateServerRequest; //# sourceMappingURL=Server.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDakUsSUFBSUcsc0JBQXNCLFdBQVcsR0FBSTtJQUNyQyxTQUFTQSxvQkFBb0JDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxnQkFBZ0IsRUFBRUMsZUFBZSxFQUFFQyxjQUFjLEVBQUVDLGFBQWEsRUFBRUMsV0FBVyxFQUFFQyxlQUFlLEVBQUVDLFlBQVksRUFBRUMsaUJBQWlCLEVBQUVDLG9CQUFvQixFQUFFQyxVQUFVLEVBQUVDLFVBQVUsRUFBRUMsMEJBQTBCLEVBQUVDLHVCQUF1QixFQUFFQyxhQUFhO1FBQ3ZSLElBQUksQ0FBQ2YsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0MsZUFBZSxHQUFHQTtRQUN2QixJQUFJLENBQUNDLGNBQWMsR0FBR0E7UUFDdEIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO1FBQ3JCLElBQUksQ0FBQ0MsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLGVBQWUsR0FBR0E7UUFDdkIsSUFBSSxDQUFDQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUdBO1FBQ3pCLElBQUksQ0FBQ0Msb0JBQW9CLEdBQUdBO1FBQzVCLElBQUksQ0FBQ0ssYUFBYSxHQUFHQTtRQUNyQixJQUFJLENBQUNKLFVBQVUsR0FBR0E7UUFDbEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsMEJBQTBCLEdBQUdBO1FBQ2xDLElBQUksQ0FBQ0MsdUJBQXVCLEdBQUdBO0lBQ25DO0lBQ0EsT0FBT2Y7QUFDWDtBQUNBSCwyQkFBMkIsR0FBR0c7QUFDOUIsSUFBSUQsc0JBQXNCLFdBQVcsR0FBSSxTQUFVa0IsTUFBTTtJQUNyRHRDLFVBQVVvQixxQkFBcUJrQjtJQUMvQixTQUFTbEIsb0JBQW9CRSxJQUFJLEVBQUVDLEtBQUssRUFBRUMsZ0JBQWdCLEVBQUVDLGVBQWUsRUFBRUMsY0FBYyxFQUFFQyxhQUFhLEVBQUVDLFdBQVcsRUFBRUMsZUFBZSxFQUFFQyxZQUFZLEVBQUVDLGlCQUFpQixFQUFFQyxvQkFBb0IsRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLDBCQUEwQixFQUFFQyx1QkFBdUIsRUFBRUMsYUFBYSxFQUFFRSxZQUFZO1FBQ3JTLElBQUlDLFFBQVFGLE9BQU8zQixJQUFJLENBQUMsSUFBSSxFQUFFVyxNQUFNQyxPQUFPQyxrQkFBa0JDLGlCQUFpQkMsZ0JBQWdCQyxlQUFlQyxhQUFhQyxpQkFBaUJDLGNBQWNDLG1CQUFtQkMsc0JBQXNCQyxZQUFZQyxZQUFZQyw0QkFBNEJDLHlCQUF5QkMsa0JBQWtCLElBQUk7UUFDclNHLE1BQU1ELFlBQVksR0FBR0E7UUFDckIsT0FBT0M7SUFDWDtJQUNBLE9BQU9wQjtBQUNYLEVBQUVDO0FBQ0ZILDJCQUEyQixHQUFHRSxxQkFDOUIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZXJ2ZXIvU2VydmVyLmpzPzNkYjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVTZXJ2ZXJSZXF1ZXN0ID0gZXhwb3J0cy5VcGRhdGVTZXJ2ZXJSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIFVwZGF0ZVNlcnZlclJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVXBkYXRlU2VydmVyUmVxdWVzdChOYW1lLCBDb2xvciwgU210cEFwaUFjdGl2YXRlZCwgUmF3RW1haWxFbmFibGVkLCBJbmJvdW5kSG9va1VybCwgQm91bmNlSG9va1VybCwgT3Blbkhvb2tVcmwsIERlbGl2ZXJ5SG9va1VybCwgQ2xpY2tIb29rVXJsLCBQb3N0Rmlyc3RPcGVuT25seSwgSW5ib3VuZFNwYW1UaHJlc2hvbGQsIFRyYWNrT3BlbnMsIFRyYWNrTGlua3MsIEluY2x1ZGVCb3VuY2VDb250ZW50SW5Ib29rLCBFbmFibGVTbXRwQXBpRXJyb3JIb29rcywgSW5ib3VuZERvbWFpbikge1xuICAgICAgICB0aGlzLk5hbWUgPSBOYW1lO1xuICAgICAgICB0aGlzLkNvbG9yID0gQ29sb3I7XG4gICAgICAgIHRoaXMuU210cEFwaUFjdGl2YXRlZCA9IFNtdHBBcGlBY3RpdmF0ZWQ7XG4gICAgICAgIHRoaXMuUmF3RW1haWxFbmFibGVkID0gUmF3RW1haWxFbmFibGVkO1xuICAgICAgICB0aGlzLkluYm91bmRIb29rVXJsID0gSW5ib3VuZEhvb2tVcmw7XG4gICAgICAgIHRoaXMuQm91bmNlSG9va1VybCA9IEJvdW5jZUhvb2tVcmw7XG4gICAgICAgIHRoaXMuT3Blbkhvb2tVcmwgPSBPcGVuSG9va1VybDtcbiAgICAgICAgdGhpcy5EZWxpdmVyeUhvb2tVcmwgPSBEZWxpdmVyeUhvb2tVcmw7XG4gICAgICAgIHRoaXMuQ2xpY2tIb29rVXJsID0gQ2xpY2tIb29rVXJsO1xuICAgICAgICB0aGlzLlBvc3RGaXJzdE9wZW5Pbmx5ID0gUG9zdEZpcnN0T3Blbk9ubHk7XG4gICAgICAgIHRoaXMuSW5ib3VuZFNwYW1UaHJlc2hvbGQgPSBJbmJvdW5kU3BhbVRocmVzaG9sZDtcbiAgICAgICAgdGhpcy5JbmJvdW5kRG9tYWluID0gSW5ib3VuZERvbWFpbjtcbiAgICAgICAgdGhpcy5UcmFja09wZW5zID0gVHJhY2tPcGVucztcbiAgICAgICAgdGhpcy5UcmFja0xpbmtzID0gVHJhY2tMaW5rcztcbiAgICAgICAgdGhpcy5JbmNsdWRlQm91bmNlQ29udGVudEluSG9vayA9IEluY2x1ZGVCb3VuY2VDb250ZW50SW5Ib29rO1xuICAgICAgICB0aGlzLkVuYWJsZVNtdHBBcGlFcnJvckhvb2tzID0gRW5hYmxlU210cEFwaUVycm9ySG9va3M7XG4gICAgfVxuICAgIHJldHVybiBVcGRhdGVTZXJ2ZXJSZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuVXBkYXRlU2VydmVyUmVxdWVzdCA9IFVwZGF0ZVNlcnZlclJlcXVlc3Q7XG52YXIgQ3JlYXRlU2VydmVyUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ3JlYXRlU2VydmVyUmVxdWVzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDcmVhdGVTZXJ2ZXJSZXF1ZXN0KE5hbWUsIENvbG9yLCBTbXRwQXBpQWN0aXZhdGVkLCBSYXdFbWFpbEVuYWJsZWQsIEluYm91bmRIb29rVXJsLCBCb3VuY2VIb29rVXJsLCBPcGVuSG9va1VybCwgRGVsaXZlcnlIb29rVXJsLCBDbGlja0hvb2tVcmwsIFBvc3RGaXJzdE9wZW5Pbmx5LCBJbmJvdW5kU3BhbVRocmVzaG9sZCwgVHJhY2tPcGVucywgVHJhY2tMaW5rcywgSW5jbHVkZUJvdW5jZUNvbnRlbnRJbkhvb2ssIEVuYWJsZVNtdHBBcGlFcnJvckhvb2tzLCBJbmJvdW5kRG9tYWluLCBEZWxpdmVyeVR5cGUpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgTmFtZSwgQ29sb3IsIFNtdHBBcGlBY3RpdmF0ZWQsIFJhd0VtYWlsRW5hYmxlZCwgSW5ib3VuZEhvb2tVcmwsIEJvdW5jZUhvb2tVcmwsIE9wZW5Ib29rVXJsLCBEZWxpdmVyeUhvb2tVcmwsIENsaWNrSG9va1VybCwgUG9zdEZpcnN0T3Blbk9ubHksIEluYm91bmRTcGFtVGhyZXNob2xkLCBUcmFja09wZW5zLCBUcmFja0xpbmtzLCBJbmNsdWRlQm91bmNlQ29udGVudEluSG9vaywgRW5hYmxlU210cEFwaUVycm9ySG9va3MsIEluYm91bmREb21haW4pIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLkRlbGl2ZXJ5VHlwZSA9IERlbGl2ZXJ5VHlwZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gQ3JlYXRlU2VydmVyUmVxdWVzdDtcbn0oVXBkYXRlU2VydmVyUmVxdWVzdCkpO1xuZXhwb3J0cy5DcmVhdGVTZXJ2ZXJSZXF1ZXN0ID0gQ3JlYXRlU2VydmVyUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZlci5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVTZXJ2ZXJSZXF1ZXN0IiwiVXBkYXRlU2VydmVyUmVxdWVzdCIsIk5hbWUiLCJDb2xvciIsIlNtdHBBcGlBY3RpdmF0ZWQiLCJSYXdFbWFpbEVuYWJsZWQiLCJJbmJvdW5kSG9va1VybCIsIkJvdW5jZUhvb2tVcmwiLCJPcGVuSG9va1VybCIsIkRlbGl2ZXJ5SG9va1VybCIsIkNsaWNrSG9va1VybCIsIlBvc3RGaXJzdE9wZW5Pbmx5IiwiSW5ib3VuZFNwYW1UaHJlc2hvbGQiLCJUcmFja09wZW5zIiwiVHJhY2tMaW5rcyIsIkluY2x1ZGVCb3VuY2VDb250ZW50SW5Ib29rIiwiRW5hYmxlU210cEFwaUVycm9ySG9va3MiLCJJbmJvdW5kRG9tYWluIiwiX3N1cGVyIiwiRGVsaXZlcnlUeXBlIiwiX3RoaXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/server/Server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ServerFilteringParameters = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\n/**\n * Describes filtering parameters that can be used when retrieving servers.\n * When pagination parameters are not specified, default values are set.\n */ var ServerFilteringParameters = /** @class */ function(_super) {\n    __extends(ServerFilteringParameters, _super);\n    function ServerFilteringParameters(count, offset, name) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ServerFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.ServerFilteringParameters = ServerFilteringParameters; //# sourceMappingURL=ServerFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlDQUFpQyxHQUFHLEtBQUs7QUFDekMsSUFBSUcsd0JBQXdCQyxtQkFBT0EsQ0FBQyxxSEFBK0I7QUFDbkU7OztDQUdDLEdBQ0QsSUFBSUYsNEJBQTRCLFdBQVcsR0FBSSxTQUFVRyxNQUFNO0lBQzNEdkIsVUFBVW9CLDJCQUEyQkc7SUFDckMsU0FBU0gsMEJBQTBCSSxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsSUFBSTtRQUNsRCxJQUFJRixVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlFLFFBQVFKLE9BQU9aLElBQUksQ0FBQyxJQUFJLEVBQUVhLE9BQU9DLFdBQVcsSUFBSTtRQUNwREUsTUFBTUQsSUFBSSxHQUFHQTtRQUNiLE9BQU9DO0lBQ1g7SUFDQSxPQUFPUDtBQUNYLEVBQUVDLHNCQUFzQk8sbUJBQW1CO0FBQzNDVixpQ0FBaUMsR0FBR0UsMkJBQ3BDLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc2VydmVyL1NlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMuanM/ZjM0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMgPSB2b2lkIDA7XG52YXIgRmlsdGVyaW5nUGFyYW1ldGVyc18xID0gcmVxdWlyZShcIi4uL2NsaWVudC9GaWx0ZXJpbmdQYXJhbWV0ZXJzXCIpO1xuLyoqXG4gKiBEZXNjcmliZXMgZmlsdGVyaW5nIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgdXNlZCB3aGVuIHJldHJpZXZpbmcgc2VydmVycy5cbiAqIFdoZW4gcGFnaW5hdGlvbiBwYXJhbWV0ZXJzIGFyZSBub3Qgc3BlY2lmaWVkLCBkZWZhdWx0IHZhbHVlcyBhcmUgc2V0LlxuICovXG52YXIgU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzKGNvdW50LCBvZmZzZXQsIG5hbWUpIHtcbiAgICAgICAgaWYgKGNvdW50ID09PSB2b2lkIDApIHsgY291bnQgPSAxMDA7IH1cbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY291bnQsIG9mZnNldCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KEZpbHRlcmluZ1BhcmFtZXRlcnNfMS5GaWx0ZXJpbmdQYXJhbWV0ZXJzKSk7XG5leHBvcnRzLlNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMgPSBTZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJTZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiRmlsdGVyaW5nUGFyYW1ldGVyc18xIiwicmVxdWlyZSIsIl9zdXBlciIsImNvdW50Iiwib2Zmc2V0IiwibmFtZSIsIl90aGlzIiwiRmlsdGVyaW5nUGFyYW1ldGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/server/Servers.js":
/*!********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/server/Servers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Servers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc2VydmVyL1NlcnZlcnMuanM/NjA0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/server/Servers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/stats/Stats.js":
/*!*****************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/stats/Stats.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Stats.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0YXRzL1N0YXRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc3RhdHMvU3RhdHMuanM/NTI4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0YXRzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/stats/Stats.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js":
/*!************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.StatisticsFilteringParameters = void 0;\nvar StatisticsFilteringParameters = /** @class */ function() {\n    function StatisticsFilteringParameters(tag, fromDate, toDate, messageStream) {\n        this.tag = tag;\n        this.fromDate = fromDate;\n        this.toDate = toDate;\n        this.messageStream = messageStream;\n    }\n    return StatisticsFilteringParameters;\n}();\nexports.StatisticsFilteringParameters = StatisticsFilteringParameters; //# sourceMappingURL=StatsFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0YXRzL1N0YXRzRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUNBQXFDLEdBQUcsS0FBSztBQUM3QyxJQUFJRSxnQ0FBZ0MsV0FBVyxHQUFJO0lBQy9DLFNBQVNBLDhCQUE4QkMsR0FBRyxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsYUFBYTtRQUN2RSxJQUFJLENBQUNILEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO0lBQ3pCO0lBQ0EsT0FBT0o7QUFDWDtBQUNBRixxQ0FBcUMsR0FBR0UsK0JBQ3hDLG9EQUFvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc3RhdHMvU3RhdHNGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzY3Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gdm9pZCAwO1xudmFyIFN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzKHRhZywgZnJvbURhdGUsIHRvRGF0ZSwgbWVzc2FnZVN0cmVhbSkge1xuICAgICAgICB0aGlzLnRhZyA9IHRhZztcbiAgICAgICAgdGhpcy5mcm9tRGF0ZSA9IGZyb21EYXRlO1xuICAgICAgICB0aGlzLnRvRGF0ZSA9IHRvRGF0ZTtcbiAgICAgICAgdGhpcy5tZXNzYWdlU3RyZWFtID0gbWVzc2FnZVN0cmVhbTtcbiAgICB9XG4gICAgcmV0dXJuIFN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufSgpKTtcbmV4cG9ydHMuU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBTdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0YXRzRmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJTdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycyIsInRhZyIsImZyb21EYXRlIiwidG9EYXRlIiwibWVzc2FnZVN0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStream.js":
/*!***************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/streams/MessageStream.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateMessageStreamRequest = exports.UpdateMessageStreamRequest = exports.UnsubscribeHandlingTypes = void 0;\nvar UnsubscribeHandlingTypes;\n(function(UnsubscribeHandlingTypes) {\n    UnsubscribeHandlingTypes[\"None\"] = \"None\";\n    UnsubscribeHandlingTypes[\"Postmark\"] = \"Postmark\";\n    UnsubscribeHandlingTypes[\"Custom\"] = \"Custom\";\n})(UnsubscribeHandlingTypes = exports.UnsubscribeHandlingTypes || (exports.UnsubscribeHandlingTypes = {}));\nvar UpdateMessageStreamRequest = /** @class */ function() {\n    function UpdateMessageStreamRequest(name, description, subscriptionManagementConfiguration) {\n        this.Name = name;\n        this.Description = description;\n        this.SubscriptionManagementConfiguration = subscriptionManagementConfiguration;\n    }\n    return UpdateMessageStreamRequest;\n}();\nexports.UpdateMessageStreamRequest = UpdateMessageStreamRequest;\nvar CreateMessageStreamRequest = /** @class */ function() {\n    function CreateMessageStreamRequest(id, name, messageStreamType, description, subscriptionManagementConfiguration) {\n        this.Name = name;\n        this.Description = description;\n        this.ID = id;\n        this.MessageStreamType = messageStreamType;\n        this.SubscriptionManagementConfiguration = subscriptionManagementConfiguration;\n    }\n    return CreateMessageStreamRequest;\n}();\nexports.CreateMessageStreamRequest = CreateMessageStreamRequest; //# sourceMappingURL=MessageStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0cmVhbXMvTWVzc2FnZVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0NBQWtDLEdBQUdBLGtDQUFrQyxHQUFHQSxnQ0FBZ0MsR0FBRyxLQUFLO0FBQ2xILElBQUlJO0FBQ0gsVUFBVUEsd0JBQXdCO0lBQy9CQSx3QkFBd0IsQ0FBQyxPQUFPLEdBQUc7SUFDbkNBLHdCQUF3QixDQUFDLFdBQVcsR0FBRztJQUN2Q0Esd0JBQXdCLENBQUMsU0FBUyxHQUFHO0FBQ3pDLEdBQUdBLDJCQUEyQkosUUFBUUksd0JBQXdCLElBQUtKLENBQUFBLGdDQUFnQyxHQUFHLENBQUM7QUFDdkcsSUFBSUcsNkJBQTZCLFdBQVcsR0FBSTtJQUM1QyxTQUFTQSwyQkFBMkJFLElBQUksRUFBRUMsV0FBVyxFQUFFQyxtQ0FBbUM7UUFDdEYsSUFBSSxDQUFDQyxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDSSxXQUFXLEdBQUdIO1FBQ25CLElBQUksQ0FBQ0ksbUNBQW1DLEdBQUdIO0lBQy9DO0lBQ0EsT0FBT0o7QUFDWDtBQUNBSCxrQ0FBa0MsR0FBR0c7QUFDckMsSUFBSUQsNkJBQTZCLFdBQVcsR0FBSTtJQUM1QyxTQUFTQSwyQkFBMkJTLEVBQUUsRUFBRU4sSUFBSSxFQUFFTyxpQkFBaUIsRUFBRU4sV0FBVyxFQUFFQyxtQ0FBbUM7UUFDN0csSUFBSSxDQUFDQyxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDSSxXQUFXLEdBQUdIO1FBQ25CLElBQUksQ0FBQ08sRUFBRSxHQUFHRjtRQUNWLElBQUksQ0FBQ0csaUJBQWlCLEdBQUdGO1FBQ3pCLElBQUksQ0FBQ0YsbUNBQW1DLEdBQUdIO0lBQy9DO0lBQ0EsT0FBT0w7QUFDWDtBQUNBRixrQ0FBa0MsR0FBR0UsNEJBQ3JDLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc3RyZWFtcy9NZXNzYWdlU3RyZWFtLmpzPzQ1MjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0ID0gZXhwb3J0cy5VcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCA9IGV4cG9ydHMuVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzID0gdm9pZCAwO1xudmFyIFVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcztcbihmdW5jdGlvbiAoVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzKSB7XG4gICAgVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzW1wiTm9uZVwiXSA9IFwiTm9uZVwiO1xuICAgIFVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlc1tcIlBvc3RtYXJrXCJdID0gXCJQb3N0bWFya1wiO1xuICAgIFVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlc1tcIkN1c3RvbVwiXSA9IFwiQ3VzdG9tXCI7XG59KShVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXMgPSBleHBvcnRzLlVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcyB8fCAoZXhwb3J0cy5VbnN1YnNjcmliZUhhbmRsaW5nVHlwZXMgPSB7fSkpO1xudmFyIFVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0KG5hbWUsIGRlc2NyaXB0aW9uLCBzdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbikge1xuICAgICAgICB0aGlzLk5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLkRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb24gPSBzdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIFVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QgPSBVcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdDtcbnZhciBDcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdChpZCwgbmFtZSwgbWVzc2FnZVN0cmVhbVR5cGUsIGRlc2NyaXB0aW9uLCBzdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbikge1xuICAgICAgICB0aGlzLk5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLkRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuSUQgPSBpZDtcbiAgICAgICAgdGhpcy5NZXNzYWdlU3RyZWFtVHlwZSA9IG1lc3NhZ2VTdHJlYW1UeXBlO1xuICAgICAgICB0aGlzLlN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uID0gc3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb247XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLkNyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0ID0gQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXNzYWdlU3RyZWFtLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0IiwiVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QiLCJVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXMiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJzdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbiIsIk5hbWUiLCJEZXNjcmlwdGlvbiIsIlN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uIiwiaWQiLCJtZXNzYWdlU3RyZWFtVHlwZSIsIklEIiwiTWVzc2FnZVN0cmVhbVR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.MessageStreamsFilteringParameters = void 0;\n/**\n * Describes filtering parameters that can be used when retrieving message streams.\n */ var MessageStreamsFilteringParameters = /** @class */ function() {\n    function MessageStreamsFilteringParameters(messageStreamType, includeArchivedStreams) {\n        this.messageStreamType = messageStreamType;\n        this.includeArchivedStreams = includeArchivedStreams;\n    }\n    return MessageStreamsFilteringParameters;\n}();\nexports.MessageStreamsFilteringParameters = MessageStreamsFilteringParameters; //# sourceMappingURL=MessageStreamsFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0cmVhbXMvTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx5Q0FBeUMsR0FBRyxLQUFLO0FBQ2pEOztDQUVDLEdBQ0QsSUFBSUUsb0NBQW9DLFdBQVcsR0FBSTtJQUNuRCxTQUFTQSxrQ0FBa0NDLGlCQUFpQixFQUFFQyxzQkFBc0I7UUFDaEYsSUFBSSxDQUFDRCxpQkFBaUIsR0FBR0E7UUFDekIsSUFBSSxDQUFDQyxzQkFBc0IsR0FBR0E7SUFDbEM7SUFDQSxPQUFPRjtBQUNYO0FBQ0FGLHlDQUF5QyxHQUFHRSxtQ0FDNUMsNkRBQTZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdHJlYW1zL01lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycy5qcz8zOTk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSB2b2lkIDA7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyBtZXNzYWdlIHN0cmVhbXMuXG4gKi9cbnZhciBNZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzKG1lc3NhZ2VTdHJlYW1UeXBlLCBpbmNsdWRlQXJjaGl2ZWRTdHJlYW1zKSB7XG4gICAgICAgIHRoaXMubWVzc2FnZVN0cmVhbVR5cGUgPSBtZXNzYWdlU3RyZWFtVHlwZTtcbiAgICAgICAgdGhpcy5pbmNsdWRlQXJjaGl2ZWRTdHJlYW1zID0gaW5jbHVkZUFyY2hpdmVkU3RyZWFtcztcbiAgICB9XG4gICAgcmV0dXJuIE1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oKSk7XG5leHBvcnRzLk1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycyA9IE1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJNZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJtZXNzYWdlU3RyZWFtVHlwZSIsImluY2x1ZGVBcmNoaXZlZFN0cmVhbXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js":
/*!******************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/suppressions/Suppression.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Suppression.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N1cHByZXNzaW9ucy9TdXBwcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N1cHByZXNzaW9ucy9TdXBwcmVzc2lvbi5qcz9lNDgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VwcHJlc3Npb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/templates/Template.js":
/*!************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/templates/Template.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TemplateFilteringParameters = exports.TemplatedMessage = exports.TemplatesPushRequest = exports.TemplateTypes = exports.TemplateValidationOptions = exports.CreateTemplateRequest = exports.UpdateTemplateRequest = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar UpdateTemplateRequest = /** @class */ function() {\n    function UpdateTemplateRequest(Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) {\n        this.Name = Name;\n        this.Subject = Subject;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.Alias = Alias;\n        this.LayoutTemplate = LayoutTemplate;\n        this.TemplateType = TemplateType;\n    }\n    return UpdateTemplateRequest;\n}();\nexports.UpdateTemplateRequest = UpdateTemplateRequest;\nvar CreateTemplateRequest = /** @class */ function(_super) {\n    __extends(CreateTemplateRequest, _super);\n    function CreateTemplateRequest(Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) {\n        return _super.call(this, Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) || this;\n    }\n    return CreateTemplateRequest;\n}(UpdateTemplateRequest);\nexports.CreateTemplateRequest = CreateTemplateRequest;\nvar TemplateValidationOptions = /** @class */ function() {\n    function TemplateValidationOptions(Subject, HtmlBody, TextBody, TestRenderModel, TemplateType, LayoutTemplate, InlineCssForHtmlTestRender) {\n        this.Subject = Subject;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.TestRenderModel = TestRenderModel;\n        this.TemplateType = TemplateType;\n        this.LayoutTemplate = LayoutTemplate;\n        this.InlineCssForHtmlTestRender = InlineCssForHtmlTestRender;\n    }\n    return TemplateValidationOptions;\n}();\nexports.TemplateValidationOptions = TemplateValidationOptions;\nvar TemplateTypes;\n(function(TemplateTypes) {\n    TemplateTypes[\"Standard\"] = \"Standard\";\n    TemplateTypes[\"Layout\"] = \"Layout\";\n})(TemplateTypes = exports.TemplateTypes || (exports.TemplateTypes = {}));\nvar TemplatesPushRequest = /** @class */ function() {\n    function TemplatesPushRequest(SourceServerID, DestinationServerID, PerformChanges) {\n        this.SourceServerID = SourceServerID;\n        this.DestinationServerID = DestinationServerID;\n        this.PerformChanges = PerformChanges;\n    }\n    return TemplatesPushRequest;\n}();\nexports.TemplatesPushRequest = TemplatesPushRequest;\nvar TemplatedMessage = /** @class */ function() {\n    function TemplatedMessage(from, templateIdOrAlias, templateModel, to, cc, bcc, replyTo, tag, trackOpens, trackLinks, headers, attachments) {\n        this.From = from;\n        this.TemplateModel = templateModel;\n        if (typeof templateIdOrAlias === \"number\") {\n            this.TemplateId = templateIdOrAlias;\n        } else {\n            this.TemplateAlias = templateIdOrAlias;\n        }\n        this.To = to;\n        this.Cc = cc;\n        this.Bcc = bcc;\n        this.ReplyTo = replyTo;\n        this.Tag = tag;\n        this.TrackOpens = trackOpens;\n        this.TrackLinks = trackLinks;\n        this.Headers = headers;\n        this.Attachments = attachments;\n    }\n    return TemplatedMessage;\n}();\nexports.TemplatedMessage = TemplatedMessage;\n/**\n * Describes filtering parameters that can be used when retrieving templates.\n * When pagination parameters are not specified, default values are set.\n */ var TemplateFilteringParameters = /** @class */ function(_super) {\n    __extends(TemplateFilteringParameters, _super);\n    function TemplateFilteringParameters(count, offset, templateType, layoutTemplate) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.templateType = templateType;\n        _this.layoutTemplate = layoutTemplate;\n        return _this;\n    }\n    return TemplateFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.TemplateFilteringParameters = TemplateFilteringParameters; //# sourceMappingURL=Template.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/templates/Template.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/triggers/InboundRule.js":
/*!**************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/triggers/InboundRule.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateInboundRuleRequest = void 0;\nvar CreateInboundRuleRequest = /** @class */ function() {\n    function CreateInboundRuleRequest(Rule) {\n        this.Rule = Rule;\n    }\n    return CreateInboundRuleRequest;\n}();\nexports.CreateInboundRuleRequest = CreateInboundRuleRequest; //# sourceMappingURL=InboundRule.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3RyaWdnZXJzL0luYm91bmRSdWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBRyxLQUFLO0FBQ3hDLElBQUlFLDJCQUEyQixXQUFXLEdBQUk7SUFDMUMsU0FBU0EseUJBQXlCQyxJQUFJO1FBQ2xDLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtJQUNoQjtJQUNBLE9BQU9EO0FBQ1g7QUFDQUYsZ0NBQWdDLEdBQUdFLDBCQUNuQyx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3RyaWdnZXJzL0luYm91bmRSdWxlLmpzP2M3YjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZUluYm91bmRSdWxlUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBDcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0KFJ1bGUpIHtcbiAgICAgICAgdGhpcy5SdWxlID0gUnVsZTtcbiAgICB9XG4gICAgcmV0dXJuIENyZWF0ZUluYm91bmRSdWxlUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLkNyZWF0ZUluYm91bmRSdWxlUmVxdWVzdCA9IENyZWF0ZUluYm91bmRSdWxlUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluYm91bmRSdWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZUluYm91bmRSdWxlUmVxdWVzdCIsIlJ1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/triggers/InboundRule.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhook.js":
/*!**********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/Webhook.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateWebhookRequest = exports.UpdateWebhookRequest = void 0;\nvar UpdateWebhookRequest = /** @class */ function() {\n    function UpdateWebhookRequest(url, triggers, httpAuth, httpHeaders) {\n        this.Url = url;\n        this.HttpAuth = httpAuth;\n        this.HttpHeaders = httpHeaders;\n        this.Triggers = triggers;\n    }\n    return UpdateWebhookRequest;\n}();\nexports.UpdateWebhookRequest = UpdateWebhookRequest;\nvar CreateWebhookRequest = /** @class */ function(_super) {\n    __extends(CreateWebhookRequest, _super);\n    function CreateWebhookRequest(url, triggers, httpAuth, httpHeaders, messageStream) {\n        var _this = _super.call(this, url, triggers, httpAuth, httpHeaders) || this;\n        _this.MessageStream = messageStream;\n        return _this;\n    }\n    return CreateWebhookRequest;\n}(UpdateWebhookRequest);\nexports.CreateWebhookRequest = CreateWebhookRequest; //# sourceMappingURL=Webhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNEJBQTRCLEdBQUdBLDRCQUE0QixHQUFHLEtBQUs7QUFDbkUsSUFBSUcsdUJBQXVCLFdBQVcsR0FBSTtJQUN0QyxTQUFTQSxxQkFBcUJDLEdBQUcsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFdBQVc7UUFDOUQsSUFBSSxDQUFDQyxHQUFHLEdBQUdKO1FBQ1gsSUFBSSxDQUFDSyxRQUFRLEdBQUdIO1FBQ2hCLElBQUksQ0FBQ0ksV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNJLFFBQVEsR0FBR047SUFDcEI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FILDRCQUE0QixHQUFHRztBQUMvQixJQUFJRCx1QkFBdUIsV0FBVyxHQUFJLFNBQVVVLE1BQU07SUFDdEQ5QixVQUFVb0Isc0JBQXNCVTtJQUNoQyxTQUFTVixxQkFBcUJFLEdBQUcsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFdBQVcsRUFBRU0sYUFBYTtRQUM3RSxJQUFJQyxRQUFRRixPQUFPbkIsSUFBSSxDQUFDLElBQUksRUFBRVcsS0FBS0MsVUFBVUMsVUFBVUMsZ0JBQWdCLElBQUk7UUFDM0VPLE1BQU1DLGFBQWEsR0FBR0Y7UUFDdEIsT0FBT0M7SUFDWDtJQUNBLE9BQU9aO0FBQ1gsRUFBRUM7QUFDRkgsNEJBQTRCLEdBQUdFLHNCQUMvQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2suanM/YWRmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVdlYmhvb2tSZXF1ZXN0ID0gZXhwb3J0cy5VcGRhdGVXZWJob29rUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBVcGRhdGVXZWJob29rUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBVcGRhdGVXZWJob29rUmVxdWVzdCh1cmwsIHRyaWdnZXJzLCBodHRwQXV0aCwgaHR0cEhlYWRlcnMpIHtcbiAgICAgICAgdGhpcy5VcmwgPSB1cmw7XG4gICAgICAgIHRoaXMuSHR0cEF1dGggPSBodHRwQXV0aDtcbiAgICAgICAgdGhpcy5IdHRwSGVhZGVycyA9IGh0dHBIZWFkZXJzO1xuICAgICAgICB0aGlzLlRyaWdnZXJzID0gdHJpZ2dlcnM7XG4gICAgfVxuICAgIHJldHVybiBVcGRhdGVXZWJob29rUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLlVwZGF0ZVdlYmhvb2tSZXF1ZXN0ID0gVXBkYXRlV2ViaG9va1JlcXVlc3Q7XG52YXIgQ3JlYXRlV2ViaG9va1JlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENyZWF0ZVdlYmhvb2tSZXF1ZXN0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENyZWF0ZVdlYmhvb2tSZXF1ZXN0KHVybCwgdHJpZ2dlcnMsIGh0dHBBdXRoLCBodHRwSGVhZGVycywgbWVzc2FnZVN0cmVhbSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB1cmwsIHRyaWdnZXJzLCBodHRwQXV0aCwgaHR0cEhlYWRlcnMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLk1lc3NhZ2VTdHJlYW0gPSBtZXNzYWdlU3RyZWFtO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVXZWJob29rUmVxdWVzdDtcbn0oVXBkYXRlV2ViaG9va1JlcXVlc3QpKTtcbmV4cG9ydHMuQ3JlYXRlV2ViaG9va1JlcXVlc3QgPSBDcmVhdGVXZWJob29rUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsImV4dGVuZFN0YXRpY3MiLCJkIiwiYiIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiX18iLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlV2ViaG9va1JlcXVlc3QiLCJVcGRhdGVXZWJob29rUmVxdWVzdCIsInVybCIsInRyaWdnZXJzIiwiaHR0cEF1dGgiLCJodHRwSGVhZGVycyIsIlVybCIsIkh0dHBBdXRoIiwiSHR0cEhlYWRlcnMiLCJUcmlnZ2VycyIsIl9zdXBlciIsIm1lc3NhZ2VTdHJlYW0iLCJfdGhpcyIsIk1lc3NhZ2VTdHJlYW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WebhookFilteringParameters = void 0;\n/**\n * Describes filtering parameters that can be used when retrieving webhooks.\n */ var WebhookFilteringParameters = /** @class */ function() {\n    function WebhookFilteringParameters(messageStream) {\n        this.messageStream = messageStream;\n    }\n    return WebhookFilteringParameters;\n}();\nexports.WebhookFilteringParameters = WebhookFilteringParameters; //# sourceMappingURL=WebhookFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQ0FBa0MsR0FBRyxLQUFLO0FBQzFDOztDQUVDLEdBQ0QsSUFBSUUsNkJBQTZCLFdBQVcsR0FBSTtJQUM1QyxTQUFTQSwyQkFBMkJDLGFBQWE7UUFDN0MsSUFBSSxDQUFDQSxhQUFhLEdBQUdBO0lBQ3pCO0lBQ0EsT0FBT0Q7QUFDWDtBQUNBRixrQ0FBa0MsR0FBR0UsNEJBQ3JDLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMuanM/YjFiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSB2b2lkIDA7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyB3ZWJob29rcy5cbiAqL1xudmFyIFdlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFdlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzKG1lc3NhZ2VTdHJlYW0pIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlU3RyZWFtID0gbWVzc2FnZVN0cmVhbTtcbiAgICB9XG4gICAgcmV0dXJuIFdlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufSgpKTtcbmV4cG9ydHMuV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBXZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIldlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwibWVzc2FnZVN0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhooks.js":
/*!***********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/Webhooks.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Webhooks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvV2ViaG9va3MuanM/Y2RkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYmhvb2tzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhooks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js":
/*!************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=BounceWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvQm91bmNlV2ViaG9vay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvQm91bmNlV2ViaG9vay5qcz8wMGU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Qm91bmNlV2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=ClickWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvQ2xpY2tXZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9DbGlja1dlYmhvb2suanM/M2IwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWNrV2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=DeliveryWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvRGVsaXZlcnlXZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9EZWxpdmVyeVdlYmhvb2suanM/ZWJiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURlbGl2ZXJ5V2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=InboundWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvSW5ib3VuZFdlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0luYm91bmRXZWJob29rLmpzPzM4ODgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmJvdW5kV2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OpenWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvT3BlbldlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL09wZW5XZWJob29rLmpzPzdlZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcGVuV2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SubscriptionChangeWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvU3Vic2NyaXB0aW9uQ2hhbmdlV2ViaG9vay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvU3Vic2NyaXB0aW9uQ2hhbmdlV2ViaG9vay5qcz9iOTFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3Vic2NyaXB0aW9uQ2hhbmdlV2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/postmark/dist/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Header = exports.Attachment = exports.TemplatedMessage = exports.Message = exports.Errors = exports.Models = exports.AdminClient = exports.AccountClient = exports.Client = exports.ServerClient = void 0;\nvar AccountClient_1 = __webpack_require__(/*! ./client/AccountClient */ \"(rsc)/./node_modules/postmark/dist/client/AccountClient.js\");\nexports.AccountClient = AccountClient_1.default;\nexports.AdminClient = AccountClient_1.default;\nvar ServerClient_1 = __webpack_require__(/*! ./client/ServerClient */ \"(rsc)/./node_modules/postmark/dist/client/ServerClient.js\");\nexports.ServerClient = ServerClient_1.default;\nexports.Client = ServerClient_1.default;\nvar Models = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nexports.Models = Models;\nvar Errors = __webpack_require__(/*! ./client/errors/Errors */ \"(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\");\nexports.Errors = Errors;\n// Essential types are exposed directly\n// to make working with common requests simpler.\nvar models_1 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Message\", ({\n    enumerable: true,\n    get: function() {\n        return models_1.Message;\n    }\n}));\nvar models_2 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"TemplatedMessage\", ({\n    enumerable: true,\n    get: function() {\n        return models_2.TemplatedMessage;\n    }\n}));\nvar models_3 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Attachment\", ({\n    enumerable: true,\n    get: function() {\n        return models_3.Attachment;\n    }\n}));\nvar models_4 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Header\", ({\n    enumerable: true,\n    get: function() {\n        return models_4.Header;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBYyxHQUFHQSxrQkFBa0IsR0FBR0Esd0JBQXdCLEdBQUdBLGVBQWUsR0FBR0EsY0FBYyxHQUFHQSxjQUFjLEdBQUdBLG1CQUFtQixHQUFHQSxxQkFBcUIsR0FBR0EsY0FBYyxHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQ2hOLElBQUlZLGtCQUFrQkMsbUJBQU9BLENBQUMsMEZBQXdCO0FBQ3REYixxQkFBcUIsR0FBR1ksZ0JBQWdCRSxPQUFPO0FBQy9DZCxtQkFBbUIsR0FBR1ksZ0JBQWdCRSxPQUFPO0FBQzdDLElBQUlDLGlCQUFpQkYsbUJBQU9BLENBQUMsd0ZBQXVCO0FBQ3BEYixvQkFBb0IsR0FBR2UsZUFBZUQsT0FBTztBQUM3Q2QsY0FBYyxHQUFHZSxlQUFlRCxPQUFPO0FBQ3ZDLElBQUlQLFNBQVNNLG1CQUFPQSxDQUFDLGtGQUFpQjtBQUN0Q2IsY0FBYyxHQUFHTztBQUNqQixJQUFJRCxTQUFTTyxtQkFBT0EsQ0FBQywwRkFBd0I7QUFDN0NiLGNBQWMsR0FBR007QUFDakIsdUNBQXVDO0FBQ3ZDLGdEQUFnRDtBQUNoRCxJQUFJVSxXQUFXSCxtQkFBT0EsQ0FBQyxrRkFBaUI7QUFDeENmLDJDQUEwQztJQUFFbUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0YsU0FBU1gsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzlHLElBQUljLFdBQVdOLG1CQUFPQSxDQUFDLGtGQUFpQjtBQUN4Q2Ysb0RBQW1EO0lBQUVtQixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPQyxTQUFTZixnQkFBZ0I7SUFBRTtBQUFFLENBQUMsRUFBQztBQUNoSSxJQUFJZ0IsV0FBV1AsbUJBQU9BLENBQUMsa0ZBQWlCO0FBQ3hDZiw4Q0FBNkM7SUFBRW1CLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9FLFNBQVNqQixVQUFVO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDcEgsSUFBSWtCLFdBQVdSLG1CQUFPQSxDQUFDLGtGQUFpQjtBQUN4Q2YsMENBQXlDO0lBQUVtQixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPRyxTQUFTbkIsTUFBTTtJQUFFO0FBQUUsQ0FBQyxFQUFDLEVBQzVHLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2luZGV4LmpzPzM5NDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhlYWRlciA9IGV4cG9ydHMuQXR0YWNobWVudCA9IGV4cG9ydHMuVGVtcGxhdGVkTWVzc2FnZSA9IGV4cG9ydHMuTWVzc2FnZSA9IGV4cG9ydHMuRXJyb3JzID0gZXhwb3J0cy5Nb2RlbHMgPSBleHBvcnRzLkFkbWluQ2xpZW50ID0gZXhwb3J0cy5BY2NvdW50Q2xpZW50ID0gZXhwb3J0cy5DbGllbnQgPSBleHBvcnRzLlNlcnZlckNsaWVudCA9IHZvaWQgMDtcbnZhciBBY2NvdW50Q2xpZW50XzEgPSByZXF1aXJlKFwiLi9jbGllbnQvQWNjb3VudENsaWVudFwiKTtcbmV4cG9ydHMuQWNjb3VudENsaWVudCA9IEFjY291bnRDbGllbnRfMS5kZWZhdWx0O1xuZXhwb3J0cy5BZG1pbkNsaWVudCA9IEFjY291bnRDbGllbnRfMS5kZWZhdWx0O1xudmFyIFNlcnZlckNsaWVudF8xID0gcmVxdWlyZShcIi4vY2xpZW50L1NlcnZlckNsaWVudFwiKTtcbmV4cG9ydHMuU2VydmVyQ2xpZW50ID0gU2VydmVyQ2xpZW50XzEuZGVmYXVsdDtcbmV4cG9ydHMuQ2xpZW50ID0gU2VydmVyQ2xpZW50XzEuZGVmYXVsdDtcbnZhciBNb2RlbHMgPSByZXF1aXJlKFwiLi9jbGllbnQvbW9kZWxzXCIpO1xuZXhwb3J0cy5Nb2RlbHMgPSBNb2RlbHM7XG52YXIgRXJyb3JzID0gcmVxdWlyZShcIi4vY2xpZW50L2Vycm9ycy9FcnJvcnNcIik7XG5leHBvcnRzLkVycm9ycyA9IEVycm9ycztcbi8vIEVzc2VudGlhbCB0eXBlcyBhcmUgZXhwb3NlZCBkaXJlY3RseVxuLy8gdG8gbWFrZSB3b3JraW5nIHdpdGggY29tbW9uIHJlcXVlc3RzIHNpbXBsZXIuXG52YXIgbW9kZWxzXzEgPSByZXF1aXJlKFwiLi9jbGllbnQvbW9kZWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWVzc2FnZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kZWxzXzEuTWVzc2FnZTsgfSB9KTtcbnZhciBtb2RlbHNfMiA9IHJlcXVpcmUoXCIuL2NsaWVudC9tb2RlbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZW1wbGF0ZWRNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2RlbHNfMi5UZW1wbGF0ZWRNZXNzYWdlOyB9IH0pO1xudmFyIG1vZGVsc18zID0gcmVxdWlyZShcIi4vY2xpZW50L21vZGVsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF0dGFjaG1lbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZGVsc18zLkF0dGFjaG1lbnQ7IH0gfSk7XG52YXIgbW9kZWxzXzQgPSByZXF1aXJlKFwiLi9jbGllbnQvbW9kZWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSGVhZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2RlbHNfNC5IZWFkZXI7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJIZWFkZXIiLCJBdHRhY2htZW50IiwiVGVtcGxhdGVkTWVzc2FnZSIsIk1lc3NhZ2UiLCJFcnJvcnMiLCJNb2RlbHMiLCJBZG1pbkNsaWVudCIsIkFjY291bnRDbGllbnQiLCJDbGllbnQiLCJTZXJ2ZXJDbGllbnQiLCJBY2NvdW50Q2xpZW50XzEiLCJyZXF1aXJlIiwiZGVmYXVsdCIsIlNlcnZlckNsaWVudF8xIiwibW9kZWxzXzEiLCJlbnVtZXJhYmxlIiwiZ2V0IiwibW9kZWxzXzIiLCJtb2RlbHNfMyIsIm1vZGVsc180Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/package.json":
/*!********************************************!*\
  !*** ./node_modules/postmark/package.json ***!
  \********************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"postmark","description":"Official Node.js client library for the Postmark HTTP API - https://www.postmarkapp.com","license":"MIT","tags":["email","utility","postmark","sending","transactional"],"version":"3.1.1","author":"Igor Balos","contributors":["Igor Balos","Andrew Theken","Aaron Blum","Aleksey Aleksandrov","Alex Shepard","Antony Jones","Ben Burwell","Ben Williamson","Chris Williams","Jakub Borys","Mark Nguyen","Matt","Matthew Blackshaw","Matthew Conlen","Ryan Kirkman","Scott Anderson","Sebastien Chopin","Theophane RUPIN","codesplicer","francescoRubini"],"main":"./dist/index.js","types":"./dist/index.d.ts","directories":{"lib":"./dist/index.js"},"scripts":{"compile":"rm -r -f ./dist && node_modules/.bin/tsc","test":"node_modules/mocha/bin/mocha --timeout 30000 --retries 1 -r ts-node/register test/**/*test.ts","unittest":"node_modules/mocha/bin/mocha --timeout 30000 --retries 1 -r ts-node/register test/unit/**/*test.ts","watchtests":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register -R list -w --recursive -G test/**/*test.ts","lint":"tslint -c tslint.json \'src/**/*.ts\'","lintfix":"tslint -c tslint.json \'src/**/*.ts\' --fix","compile-docs":"echo \'Generating docs...\' && mkdir -p ./docs && rm -r ./docs && node_modules/.bin/typedoc --options typedoc.json && git add -A ./docs && echo \'Generated docs!\'"},"homepage":"http://ActiveCampaign.github.io/postmark.js","repository":{"type":"git","url":"https://github.com/ActiveCampaign/postmark.js.git"},"bugs":{"url":"https://github.com/ActiveCampaign/postmark.js/issues"},"precommit":["compile","lint","test","compile-docs"],"devDependencies":{"@types/chai":"4.3.1","@types/mocha":"^5.2.5","@types/dotenv":"^4.0.3","@types/node":"^4.0.29","@types/sinon":"^7.5.0","chai":"4.3.1","mocha":"5.2.0","dotenv":"^4.0.0","sinon":"^7.5.0","pre-commit":"1.2.2","ts-node":"^7.0.1","tslint":"^6.1.3","typedoc":"^0.22.11","typescript":"4.5.5"},"dependencies":{"axios":"^0.25.0"}}');

/***/ })

};
;